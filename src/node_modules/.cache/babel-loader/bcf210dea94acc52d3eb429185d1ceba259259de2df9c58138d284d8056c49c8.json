{"ast":null,"code":"import dayjs from \"dayjs\";\nexport const setCurrentUser = response => {\n  if (localStorage && !isEmptyObj(response)) {\n    localStorage.setItem(\"currentUser\", JSON.stringify(response));\n    localStorage.setItem(\"token\", response === null || response === void 0 ? void 0 : response.access_token);\n  }\n};\nexport const containsText = (text, searchText) => {\n  if (text && searchText) {\n    return text.toLowerCase().indexOf(searchText.toLowerCase()) > -1;\n  }\n  return false;\n};\nexport const removeItemFrmLocalStorage = (keysToRemove = []) => {\n  if (keysToRemove.length) {\n    for (let i of keysToRemove) {\n      localStorage.removeItem(i);\n    }\n  }\n};\nexport const checkBetween = (x = 0, minValue = 0, maxValue = 0) => {\n  return x >= minValue && x <= maxValue;\n};\n\n/**\n    **\tCheck Object\n  **/\nexport const isEmptyObj = obj => {\n  if (obj && Object.keys(obj).length === 0 && Object.getPrototypeOf(obj) === Object.prototype) {\n    return true;\n  }\n  return false;\n};\n\n// get user date\nexport const getCurrentUserData = () => {\n  return typeof window !== 'undefined' ? getDataFromLocalStorage('currentUser') : null;\n};\n/**\n * Retrieves data from localStorage for the given key.\n * @param key - The key to retrieve data from localStorage.\n * @returns The data stored in localStorage for the given key, or `null` if\n *   no data was found or an error occurred while parsing the data.\n */\nexport const getDataFromLocalStorage = key => {\n  const storedData = localStorage.getItem(key);\n  if (storedData) {\n    try {\n      return JSON.parse(storedData);\n    } catch (error) {\n      console.log(`Error parsing localStorage data for key '${key}': ${error.message}`);\n    }\n  }\n  return null;\n};\n\n/**\n * Removes empty array elements from the given array.\n * @param arr - The array to filter out empty elements from.\n * @returns The filtered array.\n */\nexport const removeEmptyArrayElements = arr => {\n  if (!Array.isArray(arr)) {\n    return arr;\n  } else {\n    return arr.filter(function (elem) {\n      return elem.slotDate !== null && elem.startTime !== null;\n    }).map(removeEmptyArrayElements);\n  }\n};\n\n/**\n * Removes an element from an array at a given index.\n * @param myArray The array from which to remove an element.\n * @param indexToRemove The index of the element to remove.\n * @returns A new array with the element removed.\n */\nexport const removeElement = (myArray = [], indexToRemove) => {\n  if (myArray !== null && myArray !== void 0 && myArray.length && indexToRemove > -1) {\n    const newArray = [...myArray.slice(0, indexToRemove), ...myArray.slice(indexToRemove + 1)];\n    return newArray;\n  }\n  return myArray !== null && myArray !== void 0 && myArray.length ? myArray : [];\n};\nexport const isExpiredRefreshToken = () => {\n  var _getCurrentUserData;\n  const expiresInSeconds = 300; // 5 minutes\n  const expiresInMillis = expiresInSeconds * 1000;\n  const expiresIn = (_getCurrentUserData = getCurrentUserData()) === null || _getCurrentUserData === void 0 ? void 0 : _getCurrentUserData.expires_in;\n  const date = new Date();\n  const currentTime = date.getTime();\n  return {\n    status: currentTime >= expiresIn - expiresInMillis,\n    expiresIn\n  };\n};\nexport const convertTimestampToHumanDate = (timeStampValue, format = 'DD/MM/YYYY') => {\n  if (timeStampValue) {\n    const date = new Date(timeStampValue * 1000);\n    return dayjs(date).format(format);\n  }\n};","map":{"version":3,"names":["dayjs","setCurrentUser","response","localStorage","isEmptyObj","setItem","JSON","stringify","access_token","containsText","text","searchText","toLowerCase","indexOf","removeItemFrmLocalStorage","keysToRemove","length","i","removeItem","checkBetween","x","minValue","maxValue","obj","Object","keys","getPrototypeOf","prototype","getCurrentUserData","window","getDataFromLocalStorage","key","storedData","getItem","parse","error","console","log","message","removeEmptyArrayElements","arr","Array","isArray","filter","elem","slotDate","startTime","map","removeElement","myArray","indexToRemove","newArray","slice","isExpiredRefreshToken","_getCurrentUserData","expiresInSeconds","expiresInMillis","expiresIn","expires_in","date","Date","currentTime","getTime","status","convertTimestampToHumanDate","timeStampValue","format"],"sources":["/home/abinesh/project/job-seeker/src/utils/genericUtilities.js"],"sourcesContent":["import dayjs from \"dayjs\";\n\nexport const setCurrentUser = (response) => {\n    if(localStorage && !isEmptyObj(response)) {\n        localStorage.setItem(\"currentUser\", JSON.stringify(response));\n        localStorage.setItem(\"token\", response?.access_token);\n    }\n  };\n\n  export const containsText = (text, searchText) => {\n    if (text && searchText) {\n      return text.toLowerCase().indexOf(searchText.toLowerCase()) > -1;\n    }\n    return false;\n  }\n  \n  \n  export const removeItemFrmLocalStorage = (keysToRemove = []) => {\n    if (keysToRemove.length) {\n      for (let i of keysToRemove) {\n        localStorage.removeItem(i);\n      }\n    }\n  }\n  \n  export const checkBetween = (x = 0, minValue = 0, maxValue = 0) => {\n    return x >= minValue && x <= maxValue;\n  }\n  \n  /**\n      **\tCheck Object\n    **/\n  export const isEmptyObj = (obj) => {\n    if(obj && Object.keys(obj).length === 0 && Object.getPrototypeOf(obj) === Object.prototype) {\n      return true;\n    }\n    return false;\n  }\n  \n  // get user date\n  export const getCurrentUserData = () => {\n    return typeof window !== 'undefined' ? getDataFromLocalStorage('currentUser') : null;\n  }\n  /**\n   * Retrieves data from localStorage for the given key.\n   * @param key - The key to retrieve data from localStorage.\n   * @returns The data stored in localStorage for the given key, or `null` if\n   *   no data was found or an error occurred while parsing the data.\n   */\n  export const getDataFromLocalStorage = (key) => {\n    const storedData = localStorage.getItem(key);\n  \n    if (storedData) {\n      try {\n        return JSON.parse(storedData);\n      } catch (error) {\n        console.log(`Error parsing localStorage data for key '${key}': ${error.message}`);\n      }\n    }\n  \n    return null;\n  }\n  \n  \n  \n  /**\n   * Removes empty array elements from the given array.\n   * @param arr - The array to filter out empty elements from.\n   * @returns The filtered array.\n   */\n  export const removeEmptyArrayElements = (arr) => { \n    if (!Array.isArray(arr)) {\n       return arr;\n    } else {\n        return arr.filter( function(elem) { \n           return (elem.slotDate !== null && elem.startTime !== null)\n        } ).map(removeEmptyArrayElements)\n    }\n  }\n  \n  \n  \n  /**\n   * Removes an element from an array at a given index.\n   * @param myArray The array from which to remove an element.\n   * @param indexToRemove The index of the element to remove.\n   * @returns A new array with the element removed.\n   */\n  export const removeElement = (myArray = [], indexToRemove) => {\n    if(myArray?.length && indexToRemove > -1) {\n      const newArray = [...myArray.slice(0, indexToRemove), ...myArray.slice(indexToRemove + 1)];\n      return newArray;\n    }\n    return myArray?.length ? myArray: [];\n    \n  };\n\n  export const isExpiredRefreshToken = () => {\n    const expiresInSeconds = 300; // 5 minutes\n    const expiresInMillis = expiresInSeconds * 1000;\n    const expiresIn = getCurrentUserData()?.expires_in;\n    const date = new Date();\n    const currentTime = date.getTime();\n    return { status: (currentTime >= (expiresIn - expiresInMillis)), expiresIn};\n  }\n\n  export const convertTimestampToHumanDate = (timeStampValue, format = 'DD/MM/YYYY') => {\n    if(timeStampValue) {\n      const date = new Date(timeStampValue * 1000);\n      return dayjs(date).format(format);\n    }\n  }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}