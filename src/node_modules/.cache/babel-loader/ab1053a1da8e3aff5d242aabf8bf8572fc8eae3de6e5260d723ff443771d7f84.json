{"ast":null,"code":"var _jsxFileName = \"/home/abinesh/project/job-seeker/src/pages/parttimer/registration-wizard/personal-info.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Button, TextField, Grid, FormControl, InputLabel, Select, MenuItem, InputAdornment } from '@mui/material';\nimport EastIcon from '@mui/icons-material/East';\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { MuiOtpInput } from 'mui-one-time-password-input';\nimport { EmployeeSignup, sendEmailOtp, sendOtp, verifyEmailOtp, verifyOtp } from '../../../sevices/account';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport { Spin } from 'antd';\nimport { ENV_CONFIG, VALIDATION_MSG, useValidation } from '../../../constant/index';\nimport DoneIcon from '@mui/icons-material/Done';\nimport axios from 'axios';\n// import { set } from 'date-fns';\nimport { setCurrentUser } from '../../../utils/genericUtilities';\n// import { set } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PersonalInfo = props => {\n  _s();\n  const {\n    onNext,\n    handleSnackbarClick = f => f\n  } = props;\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [previewImage, setPreviewImage] = useState(null);\n  // const [phone, setPhone] = useState('');\n  const [emailVerified, setEmailVerified] = useState(false);\n  const [isValidEmail, setIsValidEmail] = useState(true);\n  const [emailOtpSent, setEmailOtpSent] = useState(false);\n  const [docType, setDocType] = useState('');\n  // const [panNum, setPanNum] = useState('')\n  const [cityError, setCityError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [aadharStatus, setAadharStatus] = useState(false);\n  const [panStatus, setPanStatus] = useState(false);\n  const [stateError, setstateError] = useState(\"\");\n  const [emailOtp, setEmailOtp] = useState('');\n  const [otpSent, setOtpSent] = useState(false);\n  const [otp, setOtp] = useState('');\n  const [otpResponse, setOtpResponse] = useState('');\n  const [numberVerified, setNumberVerified] = useState(false);\n  const currentDate = dayjs();\n  const defaultDate = currentDate.subtract(18, 'year');\n  const defaultDateStr = defaultDate.format('YYYY-MM-DD');\n  const [dobValue, setdobValue] = useState(dayjs(defaultDateStr));\n  // const [otp, setOtp] = React.useState('')\n  const [pincode, setPincode] = useState('');\n  const [pincodeError, setPincodeError] = useState('');\n  const [gender, setGender] = useState(''); // State variable to store the selected gender\n  const [city, setCity] = useState('');\n  const [state, setState] = useState('');\n  const [language, setLanguage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [languagesKnownError, setLanguagesKnownError] = useState('');\n  const [genderError, setgenderError] = useState(\"\");\n  const [docmentError, setdocmentError] = useState(\"\");\n  const location = useLocation();\n  const data = location.state;\n  const navigate = useNavigate();\n  const {\n    email,\n    setEmail,\n    emailError,\n    setEmailError,\n    handleEmailBlur,\n    password,\n    setPassword,\n    passwordError,\n    handlePasswordBlur,\n    setPasswordError,\n    handleConfirmPasswordBlur,\n    confirmPassword,\n    setConfirmPassword,\n    setConfirmPasswordError,\n    setPhone,\n    phoneError,\n    phone,\n    setPhoneError,\n    handlePhoneBlur,\n    confirmPasswordError,\n    handlefirstnameBlur,\n    setfirstnameError,\n    firstnameError,\n    setFirstName,\n    firstname,\n    handleLastnameBlur,\n    lastnameError,\n    lastname,\n    setLastnameError,\n    setLastName,\n    handleAdharBlur,\n    handlePanBlur,\n    setAadharError,\n    setPanError,\n    aadharError,\n    panError,\n    aadharNum,\n    panNum,\n    setPanNum,\n    setAadharNum,\n    address,\n    setaddress,\n    addressError,\n    setaddressError,\n    handleaddressBlur\n  } = useValidation();\n  useEffect(() => {\n    if (!data) {\n      navigate(\"/signup?roles=employee\");\n    }\n    if (data !== null && data !== void 0 && data.email) {\n      setEmail(data.email);\n    }\n    if (data !== null && data !== void 0 && data.phone) {\n      setPhone(data.phone);\n    }\n    let loaclInfo = localStorage.getItem(\"personalInfo\");\n    let infoData = JSON.parse(loaclInfo);\n    if (infoData) {\n      setEmail(infoData === null || infoData === void 0 ? void 0 : infoData.email);\n      setPhone(infoData === null || infoData === void 0 ? void 0 : infoData.phone);\n      // setPassword(infoData?.password);\n      // setConfirmPassword(infoData?.password);\n      setFirstName(infoData === null || infoData === void 0 ? void 0 : infoData.firstname);\n      setLastName(infoData === null || infoData === void 0 ? void 0 : infoData.lastname);\n      setdobValue(infoData === null || infoData === void 0 ? void 0 : infoData.dobValue);\n      setGender(infoData === null || infoData === void 0 ? void 0 : infoData.gender);\n      setaddress(infoData === null || infoData === void 0 ? void 0 : infoData.address);\n      setState(infoData === null || infoData === void 0 ? void 0 : infoData.state);\n      setCity(infoData === null || infoData === void 0 ? void 0 : infoData.city);\n      setPincode(infoData === null || infoData === void 0 ? void 0 : infoData.pincode);\n      setLanguage(infoData === null || infoData === void 0 ? void 0 : infoData.language);\n      setAadharNum(infoData === null || infoData === void 0 ? void 0 : infoData.aadharNum);\n      setSelectedFile(infoData === null || infoData === void 0 ? void 0 : infoData.selectedFile);\n      // setPreviewImage(URL.createObjectURL(infoData?.selectedFile))\n    }\n  }, []);\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (!(file !== null && file !== void 0 && file.type.startsWith('image/'))) {\n      // setErrorMessage('Please upload only image files.');\n      handleSnackbarClick(true, {\n        type: 'error',\n        msg: 'Please upload only image files.'\n      });\n      event.target.value = null;\n      setPreviewImage(null);\n    } else {\n      setSelectedFile(file);\n      setPreviewImage(URL.createObjectURL(file));\n    }\n  };\n  const handleChange = fieldName => event => {\n    // Update the value of the specified field in the component's state\n    if (fieldName === 'phone') {\n      // setPhone('91')\n      const value = event.target.value;\n      const sanitizedInput = value.replace(/[^0-9]/g, '').slice(0, 10);\n      if (sanitizedInput.length <= 10) {\n        setPhone(sanitizedInput);\n      }\n      // setPhone(event.target.value);\n    }\n    if (fieldName === 'otp') {\n      setOtp(event);\n    }\n  };\n  function isEmailValid(email) {\n    // Regular expression for a basic email validation\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    return emailRegex.test(email);\n  }\n  const emailOtpSend = async () => {\n    isEmailValid(email);\n    if (!isEmailValid(email)) {\n      await handleEmailBlur();\n      return;\n    }\n    setLoading(true);\n    let data = {\n      \"email\": email\n    };\n    try {\n      const response = await sendEmailOtp(data);\n      if ((response === null || response === void 0 ? void 0 : response.status) == 200) {\n        setLoading(false);\n        setEmailOtpSent(true);\n        // setOtpResponse(response?.data?.details)\n      } else {}\n    } catch (err) {\n      var _err$response, _err$response$data, _err$response$data$er;\n      setLoading(false);\n      handleSnackbarClick(true, {\n        type: 'error',\n        msg: err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : (_err$response$data$er = _err$response$data.errors) === null || _err$response$data$er === void 0 ? void 0 : _err$response$data$er.message\n      });\n    }\n  };\n  const aadhaarVerify = async () => {\n    const requestBody = {\n      id_number: aadharNum\n      // Add other data as needed\n    };\n\n    // Make the API request\n    axios.post('https://kyc-api.surepass.io/api/v1/aadhaar-validation/aadhaar-validation', requestBody, {\n      headers: {\n        'Authorization': `Bearer ${ENV_CONFIG.AUTH_TOKEN}`,\n        'Content-Type': 'application/json' // Specify the content type as JSON\n      }\n    }).then(response => {\n      var _response$data;\n      handleSnackbarClick(true, {\n        type: 'success',\n        msg: \"Verification Success\"\n      });\n      setAadharStatus(response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.success);\n    }).catch(error => {\n      var _error$response, _error$response$data;\n      handleSnackbarClick(true, {\n        type: 'error',\n        msg: error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message\n      });\n    });\n  };\n  const panVerify = async () => {\n    const requestBody = {\n      id_number: panNum\n      // Add other data as needed\n    };\n\n    // Make the API request\n    axios.post('https://kyc-api.surepass.io/api/v1/pan/pan', requestBody, {\n      headers: {\n        'Authorization': `Bearer ${ENV_CONFIG.AUTH_TOKEN}`,\n        'Content-Type': 'application/json' // Specify the content type as JSON\n      }\n    }).then(response => {\n      var _response$data2;\n      handleSnackbarClick(true, {\n        type: 'success',\n        msg: \"Verification Success\"\n      });\n      setPanStatus(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.success);\n    }).catch(error => {\n      var _error$response2, _error$response2$data;\n      handleSnackbarClick(true, {\n        type: 'error',\n        msg: error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message\n      });\n    });\n  };\n  const emailOtpVerify = async () => {\n    setLoading(true);\n    let data = {\n      \"email\": email,\n      \"otp\": emailOtp\n    };\n    try {\n      const response = await verifyEmailOtp(data);\n      if ((response === null || response === void 0 ? void 0 : response.status) == 200) {\n        setEmailVerified(true);\n\n        // }\n        setLoading(false);\n      } else {\n        handleSnackbarClick(true, {\n          type: 'error',\n          msg: 'Enter Valid OTP'\n        });\n        setOtpSent(false);\n      }\n    } catch (err) {\n      setLoading(false);\n      handleSnackbarClick(true, {\n        type: 'error',\n        msg: 'Something Went Wrong'\n      });\n    }\n  };\n  const otpSend = async () => {\n    setLoading(true);\n    let data = {\n      \"phone\": \"+91\" + phone\n    };\n    try {\n      const response = await sendOtp(data);\n      if ((response === null || response === void 0 ? void 0 : response.status) == 200) {\n        var _response$data3, _response$data4;\n        setLoading(false);\n        setOtpSent(true);\n        setOtpResponse(response === null || response === void 0 ? void 0 : (_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.details);\n        if ((response === null || response === void 0 ? void 0 : (_response$data4 = response.data) === null || _response$data4 === void 0 ? void 0 : _response$data4.message) === \"Failed to send OTP\") {\n          setOtpSent(false);\n          handleSnackbarClick(true, {\n            type: 'error',\n            msg: \"Failed to send OTP\"\n          });\n        }\n      } else {}\n    } catch (err) {\n      var _err$response2, _err$response2$data, _err$response2$data$e;\n      console.log(\"errofffr\", err);\n      setLoading(false);\n      handleSnackbarClick(true, {\n        type: 'error',\n        msg: err === null || err === void 0 ? void 0 : (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : (_err$response2$data$e = _err$response2$data.errors) === null || _err$response2$data$e === void 0 ? void 0 : _err$response2$data$e.message\n      });\n    }\n  };\n  const otpVerify = async () => {\n    setLoading(true);\n    let data = {\n      \"phone\": \"+91\" + phone,\n      \"otp\": otp\n    };\n    try {\n      const response = await verifyOtp(data);\n      if ((response === null || response === void 0 ? void 0 : response.status) == 200) {\n        var _response$data5, _response$data5$detai;\n        if ((response === null || response === void 0 ? void 0 : (_response$data5 = response.data) === null || _response$data5 === void 0 ? void 0 : (_response$data5$detai = _response$data5.details) === null || _response$data5$detai === void 0 ? void 0 : _response$data5$detai.Status) === \"Success\") {\n          setNumberVerified(true);\n        } else {\n          // alert(\"Enter Valid OTP\")\n          handleSnackbarClick(true, {\n            type: 'error',\n            msg: 'Enter Valid OTP'\n          });\n          setOtpSent(false);\n        }\n        setLoading(false);\n      } else {}\n    } catch (err) {\n      handleSnackbarClick(true, {\n        type: 'error',\n        msg: 'Something Went Wrong'\n      });\n    }\n  };\n\n  // const otpFunction = (newValue) => {\n  //     setOtp(newValue)\n  // }\n\n  const handleAddressChange = event => {\n    const newValue = event.target.value;\n    const regex = /^[A-Za-z0-9\\s.,]*$/;\n    if (regex.test(newValue) && newValue.length <= 100) {\n      setaddress(newValue);\n      setaddressError('');\n    } else {\n      setaddressError('Invalid address. Please check the input.');\n    }\n  };\n  const handleDateChange = date => {\n    const inputDate = new Date(date);\n    const formattedDate = `${inputDate.getFullYear()}-${(inputDate.getMonth() + 1).toString().padStart(2, '0')}-${inputDate.getDate().toString().padStart(2, '0')}`;\n    setdobValue(formattedDate);\n  };\n  const shouldDisableDate = date => {\n    return date.isAfter(defaultDate, 'day');\n  };\n  const validatePincode = () => {\n    const pincodeRegex = /^\\d{6}(\\s?\\d{6})?$/;\n    const isValid = pincodeRegex.test(pincode);\n    if (!isValid) {\n      setPincodeError('Please enter a valid pincode');\n    } else {\n      setPincodeError('');\n    }\n    return isValid;\n  };\n  const handlePincodeChange = event => {\n    const {\n      value\n    } = event.target;\n    const sanitizedInput = value.replace(/[^0-9]/g, '').slice(0, 10);\n    const truncatedValue = sanitizedInput.slice(0, 6);\n    setPincode(truncatedValue);\n  };\n  const validateLanguagesKnown = value => {\n    if (/\\d/.test(value)) {\n      setLanguagesKnownError('Language known should not contain numbers.');\n    } else {\n      setLanguagesKnownError('');\n    }\n  };\n  const handleLanguageChange = event => {\n    const value = event.target.value;\n    const regex = /^[A-Za-z ]*$/;\n    if (!value) {\n      setLanguagesKnownError('Language is required.');\n      setLanguage('');\n    } else if (!regex.test(value)) {\n      setLanguagesKnownError('Language known should only contain letters, numbers, and spaces.');\n    } else {\n      setLanguagesKnownError('');\n      setLanguage(value);\n    }\n  };\n  const handlePincodeBlur = () => {\n    validatePincode();\n  };\n  const docValue = e => {\n    const docs = e.target.value;\n    if (!docs) {\n      setdocmentError('docuement is required.');\n    } else {\n      setdocmentError('');\n    }\n    if (docs == \"PAN\") {\n      // aadharNum\n      setAadharNum(\"\");\n      setAadharStatus(\"\");\n    } else if (docs == \"Aadhar\") {\n      setPanNum(\"\");\n      setPanStatus(\"\");\n    }\n    setDocType(docs);\n  };\n  const handleNext = async event => {\n    if (!emailVerified) {\n      return handleSnackbarClick(true, {\n        type: 'error',\n        msg: \"Verify your Email Address\"\n      });\n    }\n    switch (true) {\n      case !state:\n        handleSnackbarClick(true, {\n          type: 'error',\n          msg: 'State is missing'\n        });\n        return;\n      case !city:\n        handleSnackbarClick(true, {\n          type: 'error',\n          msg: 'City is missing'\n        });\n        return;\n      case !pincode:\n        handleSnackbarClick(true, {\n          type: 'error',\n          msg: 'Pincode is missing'\n        });\n        return;\n      case !language:\n        handleSnackbarClick(true, {\n          type: 'error',\n          msg: 'Language is missing'\n        });\n        return;\n      default:\n        break;\n    }\n    event === null || event === void 0 ? void 0 : event.preventDefault();\n    const validateField = (field, fieldName) => {\n      if (!field) {\n        return fieldName + ' is required';\n      }\n      return '';\n    };\n    if (password.length < 8) {\n      return handleSnackbarClick(true, {\n        type: 'error',\n        msg: \"Password must be at least 8 characters long\"\n      });\n    }\n    if (!city) {\n      return handleSnackbarClick(true, {\n        type: 'error',\n        msg: \"City is required\"\n      });\n    }\n    const emailError = validateField(email, 'Email');\n    const passwordError = validateField(password, 'Password');\n    const confirmPasswordError = validateField(confirmPassword, 'Confirm Password');\n    const firstnameError = validateField(firstname, 'First name');\n    const lastnameError = validateField(lastname, 'Last name');\n    const aadharError = validateField(aadharNum, 'Aadhar number');\n    const panError = validateField(panNum, 'PAN number');\n    const phoneError = validateField(phone, 'Phone number');\n    const addressError = validateField(address, 'Address');\n    setEmailError(emailError);\n    setPasswordError(passwordError);\n    setLastnameError(lastnameError);\n    setfirstnameError(firstnameError);\n    setAadharError(aadharError);\n    setPanError(panError);\n    setConfirmPasswordError(confirmPasswordError);\n    setPhoneError(phoneError);\n    setaddressError(addressError);\n    const personalInfo = {\n      email,\n      phone,\n      password,\n      //   firstName,\n      // firstname,\n      //   lastName,\n      // lastname,\n      dobValue,\n      gender,\n      address,\n      state,\n      city,\n      pincode,\n      language,\n      aadharNum,\n      selectedFile\n    };\n    const body = {\n      \"first_name\": firstname,\n      \"last_name\": lastname,\n      \"email\": email,\n      \"phone\": phone,\n      \"password\": password,\n      \"grant_type\": \"password\",\n      \"client_id\": ENV_CONFIG.CLIENT_ID,\n      \"client_secret\": ENV_CONFIG.CLIENT_SECRET,\n      \"login_type\": \"password\",\n      \"username\": email\n    };\n    localStorage.setItem(\"personalInfo\", JSON.stringify(personalInfo));\n    // if (aadharStatus || panStatus) {\n    console.log(\"personalInfo\", personalInfo);\n    if (numberVerified) {\n      if (!emailError && !passwordError && !firstnameError && !lastnameError && !phoneError) {\n        try {\n          const response = await EmployeeSignup(body);\n          let UserData = {\n            response\n          };\n          if ((response === null || response === void 0 ? void 0 : response.status) == 200) {\n            var _response$data6, _response$data6$detai, _response$data7, _response$data7$token, _response$data8;\n            let employeeId = response === null || response === void 0 ? void 0 : (_response$data6 = response.data) === null || _response$data6 === void 0 ? void 0 : (_response$data6$detai = _response$data6.details) === null || _response$data6$detai === void 0 ? void 0 : _response$data6$detai.id;\n            let date = new Date();\n            let currentTime = date.getTime();\n            const expires_in = currentTime + (response === null || response === void 0 ? void 0 : (_response$data7 = response.data) === null || _response$data7 === void 0 ? void 0 : (_response$data7$token = _response$data7.token) === null || _response$data7$token === void 0 ? void 0 : _response$data7$token.expires_in) * 1000;\n            setCurrentUser({\n              ...(response === null || response === void 0 ? void 0 : (_response$data8 = response.data) === null || _response$data8 === void 0 ? void 0 : _response$data8.token),\n              expires_in\n            });\n\n            // if (selectedFile ) {\n            // if (employeeDetails?.personalInfo?.selectedFile && !isEmptyObj(employeeDetails?.personalInfo?.selectedFile)) {\n            //     uploadProfile(employeeId)\n            // }\n\n            // setLoading(false);\n            // removeItemFrmLocalStorage(['personalInfo', 'educationInfo'])\n            setLoading(false);\n            onNext({\n              personalInfo,\n              tabKey: 1\n            });\n          } else {}\n        } catch (err) {\n          var _err$response3, _err$response3$data, _err$response3$data$e, _err$response4, _err$response4$data, _err$response4$data$e, _err$response5, _err$response5$data, _err$response5$data$e, _err$response5$data$e2;\n          setLoading(false);\n          handleSnackbarClick(true, {\n            type: 'error',\n            msg: err !== null && err !== void 0 && (_err$response3 = err.response) !== null && _err$response3 !== void 0 && (_err$response3$data = _err$response3.data) !== null && _err$response3$data !== void 0 && (_err$response3$data$e = _err$response3$data.errors) !== null && _err$response3$data$e !== void 0 && _err$response3$data$e.message ? err === null || err === void 0 ? void 0 : (_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : (_err$response4$data$e = _err$response4$data.errors) === null || _err$response4$data$e === void 0 ? void 0 : _err$response4$data$e.message : err === null || err === void 0 ? void 0 : (_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : (_err$response5$data$e = _err$response5$data.errors[0]) === null || _err$response5$data$e === void 0 ? void 0 : (_err$response5$data$e2 = _err$response5$data$e.rules[0]) === null || _err$response5$data$e2 === void 0 ? void 0 : _err$response5$data$e2.message\n          });\n\n          // setErrorPopupOpen(true);\n        }\n      } else {\n        setLoading(false);\n        handleSnackbarClick(true, {\n          type: 'error',\n          msg: \"Verify your Mobile Number\"\n        });\n      }\n    } else {\n      setLoading(false);\n      // alert(\"Verify your Mobile Number\")\n      handleSnackbarClick(true, {\n        type: 'error',\n        msg: \"Verify your Mobile Number\"\n      });\n    }\n    // } else {\n    //     handleSnackbarClick(true, { type: 'error', msg: \"Please verify any document\" })\n    // }\n  };\n\n  // const handleGenderChange = (event) => {\n  //     const gender = event.target.value\n  //     if (!gender) {\n  //         setgenderError('gender is required.');\n  //     } else {\n  //         setgenderError('');\n  //     }\n  //     setGender(event.target.value);\n  // };\n  const handleGenderChange = event => {\n    const selectedGender = event.target.value;\n    if (!selectedGender) {\n      setgenderError('gender is required.');\n    } else {\n      setgenderError('');\n    }\n    setGender(selectedGender);\n  };\n  const handleChangestate = event => {\n    const selectestate = event.target.value;\n    if (!selectestate) {\n      setstateError('state is required.');\n    } else {\n      setstateError('');\n    }\n    setState(event.target.value);\n  };\n  const handleCity = event => {\n    const regex = /^[A-Za-z]+$/;\n    if (regex.test(event.target.value)) {\n      setCity(event.target.value);\n    }\n    if (event.target.value.trim() === '') {\n      setCityError(true);\n      setCity(event.target.value);\n      setErrorMessage('City is required');\n    } else {\n      setCityError(false);\n      setErrorMessage('');\n    }\n  };\n  const emailOtpValue = e => {\n    setEmailOtp(e);\n  };\n\n  // const handleEmailChange = (event) => {\n  //     const newEmail = event.target.value;\n  //     setEmail(newEmail);\n  //     // setIsValidEmail(validateEmail(newEmail));\n  // };\n  // const validateEmail = (email) => {\n  //     // return validator.isEmail(email);\n  // };\n\n  // const handleNext = (event) => {\n  //     event.preventDefault();\n  //     // if (password !== confirmPassword) {\n  //     //     setPasswordError(true);\n  //     //   } else {\n  //     //     setPasswordError(false);\n  //     const personalInfo = {\n  //         email,\n  //         phone,\n  //         password,\n  //         //   firstName,\n  //         firstname,\n  //         //   lastName,\n  //         lastname,\n  //         dobValue,\n  //         gender,\n  //         address,\n  //         state, city, pincode, language, aadharNum\n  //     };\n  //     localStorage.setItem(\"personalInfo\",JSON.stringify(personalInfo));\n  //     onNext(personalInfo)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"WizardFormContainer\",\n    children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SiginLoader\",\n      children: /*#__PURE__*/_jsxDEV(Spin, {\n        spinning: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 683,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"Personal Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 5,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"first_name\",\n            label: \"First name\",\n            name: \"first_name\",\n            className: \"form-control\",\n            defaultValue: firstname,\n            value: firstname,\n            error: !!firstnameError,\n            type: 'text',\n            helperText: firstnameError,\n            onChange: e => setFirstName(e.target.value.replace(/[^A-Za-z]/ig, '')),\n            onBlur: handlefirstnameBlur,\n            inputProps: {\n              maxLength: 50\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 691,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            type: 'text',\n            id: \"last_name\",\n            label: \"Last name\",\n            name: \"last_name\",\n            className: \"form-control\",\n            error: !!lastnameError,\n            helperText: lastnameError,\n            defaultValue: lastname,\n            value: lastname,\n            onChange: e => setLastName(e.target.value.replace(/[^A-Za-z]/ig, '')),\n            onBlur: handleLastnameBlur,\n            inputProps: {\n              maxLength: 50\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 708,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: emailVerified ? /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"phone_number\",\n            label: \"Email\",\n            className: \"form-control\",\n            value: email,\n            InputProps: {\n              type: 'text',\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(DoneIcon, {\n                  className: \"phoneVerifyIcon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 752,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 751,\n                columnNumber: 45\n              }, this)\n            },\n            InputLabelProps: {\n              shrink: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 743,\n            columnNumber: 33\n          }, this) : emailOtpSent ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"verifyOtpInput\",\n            children: [/*#__PURE__*/_jsxDEV(MuiOtpInput, {\n              value: emailOtp,\n              onChange: emailOtpValue,\n              inputProps: {\n                inputMode: 'numeric',\n                pattern: '[0-9]*'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 760,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"phoneVerifyBtn\",\n              onClick: emailOtpVerify,\n              children: \"Enter OTP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 765,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 759,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"name-input\",\n            name: \"email\",\n            variant: \"outlined\",\n            value: email,\n            label: \"Email\",\n            onBlur: handleEmailBlur,\n            error: !!emailError,\n            helperText: emailError,\n            onChange: e => setEmail(e.target.value),\n            InputProps: {\n              type: 'text',\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"phoneVerifyBtn\",\n                  onClick: emailOtpSend,\n                  children: \"Verify\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 784,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 783,\n                columnNumber: 45\n              }, this)\n            },\n            inputProps: {\n              maxLength: 50\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 770,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: numberVerified ? /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"phone_number\",\n            label: \"Phone number\",\n            className: \"form-control\",\n            value: phone,\n            InputProps: {\n              type: 'tel',\n              maxLength: 10,\n              pattern: '[0-9]*',\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(DoneIcon, {\n                  className: \"phoneVerifyIcon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 811,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 810,\n                columnNumber: 45\n              }, this)\n            },\n            InputLabelProps: {\n              shrink: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 800,\n            columnNumber: 33\n          }, this) : otpSent ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"verifyOtpInput\",\n            children: [/*#__PURE__*/_jsxDEV(MuiOtpInput, {\n              value: otp,\n              onChange: handleChange(\"otp\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 819,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"phoneVerifyBtn\",\n              onClick: otpVerify,\n              children: \"Enter OTP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 820,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 818,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"phone_number\",\n            label: \"Phone number\",\n            className: \"form-control\",\n            value: phone,\n            onChange: handleChange(\"phone\")\n            // placeholder='Please enter Country code'\n            // onChange={(event) => setPhone(event.target.value)}\n            // style={{display: 'none'}}\n            ,\n            InputProps: {\n              type: 'tel',\n              maxLength: 10,\n              pattern: '[0-9]*',\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"phoneVerifyBtn\",\n                  onClick: otpSend,\n                  children: \"Verify\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 840,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 839,\n                columnNumber: 45\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 825,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 797,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"password\",\n            label: \"Password\",\n            className: \"form-control\",\n            error: !!passwordError,\n            helperText: passwordError,\n            value: password,\n            name: \"password\",\n            onBlur: handlePasswordBlur,\n            onChange: e => {\n              if (e.target.value.length <= 30) {\n                setPassword(e.target.value);\n              }\n              if ((password === null || password === void 0 ? void 0 : password.length) < 7) {\n                setPasswordError(\"minimum 8 character required\");\n              } else {\n                setPasswordError(\"\");\n              }\n            },\n            type: \"password\",\n            inputProps: {\n              maxLength: 30\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 853,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"confirm_password\",\n            label: \"Confirm password\",\n            error: !!confirmPasswordError,\n            helperText: confirmPasswordError,\n            onBlur: handleConfirmPasswordBlur,\n            onChange: e => {\n              if (e.target.value.length <= 30) {\n                setConfirmPassword(e.target.value);\n              }\n            },\n            value: confirmPassword,\n            className: \"form-control\",\n            type: \"password\",\n            inputProps: {\n              maxLength: 30\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 879,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 878,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n            dateAdapter: AdapterDayjs,\n            children: /*#__PURE__*/_jsxDEV(DemoContainer, {\n              components: ['DatePicker'],\n              children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                defaultValue: dobValue,\n                name: \"dob\",\n                onChange: handleDateChange,\n                label: \"Date of birth\",\n                shouldDisableYear: shouldDisableDate,\n                disableFuture: true,\n                slotProps: {\n                  textField: {\n                    readOnly: true\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 901,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 900,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 899,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 898,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"type_of_company\",\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 911,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"type_of_company\",\n              id: \"demo-simple-select\",\n              className: \"form-control\",\n              label: \"Gender\",\n              value: gender,\n              onChange: handleGenderChange,\n              onBlur: handleGenderChange,\n              required: true,\n              error: !!genderError,\n              helperText: genderError,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Male\",\n                children: \"Male\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 924,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Female\",\n                children: \"Female\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 925,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Others\",\n                children: \"Others\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 926,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 912,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"selecInput\",\n              children: genderError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 928,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 910,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 909,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"confirm_password\",\n            label: \"Address\",\n            className: \"form-control\",\n            error: !!addressError,\n            helperText: addressError,\n            value: address,\n            onChange: handleAddressChange,\n            InputProps: {\n              type: 'text'\n            },\n            inputProps: {\n              maxLength: 100\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 933,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 932,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"city\",\n            label: \"City\",\n            className: \"form-control\",\n            value: city,\n            onChange: handleCity,\n            onBlur: handleCity,\n            InputProps: {\n              type: 'text'\n            },\n            error: cityError,\n            helperText: errorMessage,\n            inputProps: {\n              maxLength: 40\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 950,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 949,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"type_of_company\",\n              children: \"State\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 970,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"State\",\n              id: \"demo-simple-select\",\n              className: \"form-control\",\n              required: true,\n              label: \"State\",\n              value: state,\n              onBlur: handleChangestate,\n              onChange: handleChangestate,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'Andhra Pradesh',\n                children: \"Andhra Pradesh\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 982,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Arunachal Pradesh\",\n                children: \"Arunachal Pradesh\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 983,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Assam\",\n                children: \"Assam\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 984,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'Bihar',\n                children: \"Bihar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 985,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'Chhattisgarh',\n                children: \"Chhattisgarh\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 986,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'Goa',\n                children: \"Goa\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 987,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Haryana\",\n                children: \"Haryana\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 988,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Himachal Pradesh\",\n                children: \"Himachal Pradesh\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 989,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Jharkhand\",\n                children: \"Jharkhand\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 990,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Karnataka\",\n                children: \"Karnataka\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 991,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Kerala\",\n                children: \"Kerala\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 992,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Madhya Pradesh\",\n                children: \"Madhya Pradesh\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 993,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Maharashtra\",\n                children: \"Maharashtra\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 994,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Manipur\",\n                children: \"Manipur\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 995,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Meghalaya\",\n                children: \"Meghalaya\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 996,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Mizoram\",\n                children: \"Mizoram\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 997,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Nagaland\",\n                children: \"Nagaland\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 998,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Puducherry\",\n                children: \"Puducherry\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 999,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Punjab\",\n                children: \"Punjab\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1000,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Rajasthan\",\n                children: \"Rajasthan\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1001,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Odisha\",\n                children: \"Odisha\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1002,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Sikkim\",\n                children: \"Sikkim\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1003,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Tamil Nadu\",\n                children: \"Tamil Nadu\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1004,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Telangana\",\n                children: \"Telangana\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1005,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Tripura\",\n                children: \"Tripura\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1006,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Uttar Pradesh\",\n                children: \"Uttar Pradesh\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1007,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Uttarakhand\",\n                children: \"Uttarakhand\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1008,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"West Bengal\",\n                children: \"West Bengal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1009,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Andaman and Nicobar Islands\",\n                children: \"Andaman and Nicobar Islands\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1010,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Chandigarh\",\n                children: \"Chandigarh\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1011,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Dadra and Nagar Haveli and Daman and Diu\",\n                children: \"Dadra and Nagar Haveli and Daman and Diu\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1012,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Lakshadweep\",\n                children: \"Lakshadweep\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1013,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Delhi\",\n                children: \"Delhi\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1014,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Ladakh\",\n                children: \"Ladakh\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1015,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Lakshadweep\",\n                children: \"Lakshadweep\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1016,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 971,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"selecInput\",\n              children: stateError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1018,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 969,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 968,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"pincode-input\",\n            label: \"Pincode\",\n            variant: \"outlined\",\n            value: pincode,\n            onChange: handlePincodeChange,\n            onBlur: handlePincodeBlur,\n            error: !!pincodeError,\n            helperText: pincodeError,\n            inputProps: {\n              type: 'tel',\n              // This will show a numeric keyboard on mobile devices\n              maxLength: 6 // Limit the input to 6 digits\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1022,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1021,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"language_known\",\n            label: \"Language known\",\n            className: \"form-control\",\n            error: !!languagesKnownError,\n            helperText: languagesKnownError,\n            onBlur: handleLanguageChange,\n            value: language,\n            onChange: handleLanguageChange,\n            InputProps: {\n              type: 'text'\n            }\n            // value={language}\n            // onChange={handleLanguageChange}\n            ,\n            inputProps: {\n              maxLength: 40\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1049,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1048,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"aadhar_number\",\n              children: \"Select Document For Verification\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1070,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"aadhar_number\",\n              id: \"aadhar_number\",\n              className: \"form-control\",\n              label: \"aadhar_number\",\n              value: docType,\n              onBlur: docValue,\n              onChange: docValue,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"PAN\",\n                children: \"PAN\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1081,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Aadhar\",\n                children: \"Aadhar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1082,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1071,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"selecInput\",\n              children: docmentError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1084,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1069,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1068,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: docType == \"Aadhar\" ? aadharStatus ? /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"aadhar_number\",\n            label: \"aadhar_number\",\n            className: \"form-control\",\n            value: aadharNum,\n            InputProps: {\n              type: 'text',\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(DoneIcon, {\n                  className: \"phoneVerifyIcon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1101,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1100,\n                columnNumber: 45\n              }, this)\n            },\n            InputLabelProps: {\n              shrink: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1092,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"aadhar_number\",\n            label: \"Aadhar number\",\n            className: \"form-control\",\n            error: !!aadharError,\n            helperText: aadharError,\n            defaultValue: aadharNum,\n            value: aadharNum,\n            first: true,\n            Name: true,\n            is: true,\n            required: true,\n            name: \"aadhar_number\",\n            onBlur: handleAdharBlur,\n            onChange: event => {\n              const aadharNumber = event.target.value;\n              if (aadharNumber.length <= 12) {\n                const numericInput = aadharNumber.replace(/\\D/g, '');\n                setAadharNum(numericInput);\n              }\n            },\n            InputProps: {\n              inputMode: 'numeric',\n              // type: 'text',\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: aadharNum ? /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"phoneVerifyBtn\",\n                  onClick: aadhaarVerify,\n                  children: \"Verify\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1133,\n                  columnNumber: 53\n                }, this) : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1130,\n                columnNumber: 45\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1108,\n            columnNumber: 33\n          }, this) : docType == \"PAN\" ? panStatus ? /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"pan_number\",\n            label: \"PAN No\",\n            className: \"form-control\",\n            value: panNum,\n            InputProps: {\n              type: 'text',\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(DoneIcon, {\n                  className: \"phoneVerifyIcon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1153,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1152,\n                columnNumber: 49\n              }, this)\n            },\n            InputLabelProps: {\n              shrink: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1144,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"pan_number\",\n            label: \"PAN No\",\n            className: \"form-control\",\n            error: !!panError,\n            helperText: panError,\n            defaultValue: panNum,\n            value: panNum,\n            name: \"pan_number\",\n            onBlur: handlePanBlur,\n            onChange: event => {\n              const panNumber = event.target.value;\n              if (panNumber.length <= 10) {\n                const numericInput = panNumber.replace(/\\s/g, '').toUpperCase();\n                setPanNum(numericInput);\n              }\n            },\n            InputProps: {\n              inputMode: 'numeric',\n              // type: 'text',\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: panNum ? /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"phoneVerifyBtn\",\n                  onClick: panVerify,\n                  children: \"Verify\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1183,\n                  columnNumber: 57\n                }, this) : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1181,\n                columnNumber: 49\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1160,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"pan_number\",\n            label: \"\",\n            className: \"form-control\",\n            value: panNum,\n            name: \"pan_number\",\n            onBlur: handlePanBlur,\n            onChange: event => {\n              handleSnackbarClick(true, {\n                type: 'error',\n                msg: \"Please select document for verification\"\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1192,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1087,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-uncontrolled\",\n            label: \"Upload profile image\",\n            className: \"form-control fileAttachmentInput\",\n            InputLabelProps: {\n              shrink: true\n            },\n            onChange: handleFileChange,\n            type: \"file\",\n            InputProps: {\n              accept: 'image/*',\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(AttachFileIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1222,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1221,\n                columnNumber: 37\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1209,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"uploadedImage\",\n            children: previewImage && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: previewImage,\n              alt: \"Preview\",\n              style: {\n                maxWidth: '100%',\n                marginTop: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1229,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1227,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"WizardNextStep\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              className: \"WizardNextBtn\",\n              onClick: handleNext,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1236,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(EastIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1237,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1235,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1234,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1233,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 688,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 681,\n    columnNumber: 9\n  }, this);\n};\n_s(PersonalInfo, \"jbdeADxzuEohC537mQm087dJWFQ=\", false, function () {\n  return [useLocation, useNavigate, useValidation];\n});\n_c = PersonalInfo;\nexport default PersonalInfo;\nvar _c;\n$RefreshReg$(_c, \"PersonalInfo\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Button","TextField","Grid","FormControl","InputLabel","Select","MenuItem","InputAdornment","EastIcon","AttachFileIcon","DemoContainer","AdapterDayjs","LocalizationProvider","DatePicker","MuiOtpInput","EmployeeSignup","sendEmailOtp","sendOtp","verifyEmailOtp","verifyOtp","useLocation","useNavigate","dayjs","Spin","ENV_CONFIG","VALIDATION_MSG","useValidation","DoneIcon","axios","setCurrentUser","jsxDEV","_jsxDEV","PersonalInfo","props","_s","onNext","handleSnackbarClick","f","selectedFile","setSelectedFile","previewImage","setPreviewImage","emailVerified","setEmailVerified","isValidEmail","setIsValidEmail","emailOtpSent","setEmailOtpSent","docType","setDocType","cityError","setCityError","errorMessage","setErrorMessage","aadharStatus","setAadharStatus","panStatus","setPanStatus","stateError","setstateError","emailOtp","setEmailOtp","otpSent","setOtpSent","otp","setOtp","otpResponse","setOtpResponse","numberVerified","setNumberVerified","currentDate","defaultDate","subtract","defaultDateStr","format","dobValue","setdobValue","pincode","setPincode","pincodeError","setPincodeError","gender","setGender","city","setCity","state","setState","language","setLanguage","loading","setLoading","languagesKnownError","setLanguagesKnownError","genderError","setgenderError","docmentError","setdocmentError","location","data","navigate","email","setEmail","emailError","setEmailError","handleEmailBlur","password","setPassword","passwordError","handlePasswordBlur","setPasswordError","handleConfirmPasswordBlur","confirmPassword","setConfirmPassword","setConfirmPasswordError","setPhone","phoneError","phone","setPhoneError","handlePhoneBlur","confirmPasswordError","handlefirstnameBlur","setfirstnameError","firstnameError","setFirstName","firstname","handleLastnameBlur","lastnameError","lastname","setLastnameError","setLastName","handleAdharBlur","handlePanBlur","setAadharError","setPanError","aadharError","panError","aadharNum","panNum","setPanNum","setAadharNum","address","setaddress","addressError","setaddressError","handleaddressBlur","loaclInfo","localStorage","getItem","infoData","JSON","parse","handleFileChange","event","file","target","files","type","startsWith","msg","value","URL","createObjectURL","handleChange","fieldName","sanitizedInput","replace","slice","length","isEmailValid","emailRegex","test","emailOtpSend","response","status","err","_err$response","_err$response$data","_err$response$data$er","errors","message","aadhaarVerify","requestBody","id_number","post","headers","AUTH_TOKEN","then","_response$data","success","catch","error","_error$response","_error$response$data","panVerify","_response$data2","_error$response2","_error$response2$data","emailOtpVerify","otpSend","_response$data3","_response$data4","details","_err$response2","_err$response2$data","_err$response2$data$e","console","log","otpVerify","_response$data5","_response$data5$detai","Status","handleAddressChange","newValue","regex","handleDateChange","date","inputDate","Date","formattedDate","getFullYear","getMonth","toString","padStart","getDate","shouldDisableDate","isAfter","validatePincode","pincodeRegex","isValid","handlePincodeChange","truncatedValue","validateLanguagesKnown","handleLanguageChange","handlePincodeBlur","docValue","e","docs","handleNext","preventDefault","validateField","field","personalInfo","body","CLIENT_ID","CLIENT_SECRET","setItem","stringify","UserData","_response$data6","_response$data6$detai","_response$data7","_response$data7$token","_response$data8","employeeId","id","currentTime","getTime","expires_in","token","tabKey","_err$response3","_err$response3$data","_err$response3$data$e","_err$response4","_err$response4$data","_err$response4$data$e","_err$response5","_err$response5$data","_err$response5$data$e","_err$response5$data$e2","rules","handleGenderChange","selectedGender","handleChangestate","selectestate","handleCity","trim","emailOtpValue","className","children","spinning","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","sm","label","name","defaultValue","helperText","onChange","onBlur","inputProps","maxLength","InputProps","endAdornment","position","InputLabelProps","shrink","inputMode","pattern","onClick","variant","dateAdapter","components","shouldDisableYear","disableFuture","slotProps","textField","readOnly","fullWidth","labelId","required","first","Name","is","aadharNumber","numericInput","panNumber","toUpperCase","accept","src","alt","style","maxWidth","marginTop","_c","$RefreshReg$"],"sources":["/home/abinesh/project/job-seeker/src/pages/parttimer/registration-wizard/personal-info.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Button, TextField, Grid, FormControl, InputLabel, Select, MenuItem, InputAdornment } from '@mui/material';\nimport EastIcon from '@mui/icons-material/East';\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { MuiOtpInput } from 'mui-one-time-password-input';\nimport { EmployeeSignup, sendEmailOtp, sendOtp, verifyEmailOtp, verifyOtp } from '../../../sevices/account';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport { Spin } from 'antd';\nimport { ENV_CONFIG, VALIDATION_MSG, useValidation } from '../../../constant/index';\nimport DoneIcon from '@mui/icons-material/Done';\nimport axios from 'axios';\n// import { set } from 'date-fns';\nimport { setCurrentUser } from '../../../utils/genericUtilities';\n// import { set } from 'date-fns';\n\nconst PersonalInfo = (props) => {\n    const { onNext, handleSnackbarClick = f => f } = props;\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [previewImage, setPreviewImage] = useState(null);\n    // const [phone, setPhone] = useState('');\n    const [emailVerified, setEmailVerified] = useState(false);\n    const [isValidEmail, setIsValidEmail] = useState(true);\n    const [emailOtpSent, setEmailOtpSent] = useState(false);\n    const [docType, setDocType] = useState('')\n    // const [panNum, setPanNum] = useState('')\n    const [cityError, setCityError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [aadharStatus, setAadharStatus] = useState(false);\n    const [panStatus, setPanStatus] = useState(false);\n    const [stateError, setstateError] = useState(\"\")\n\n    const [emailOtp, setEmailOtp] = useState('');\n    const [otpSent, setOtpSent] = useState(false);\n    const [otp, setOtp] = useState('');\n    const [otpResponse, setOtpResponse] = useState('')\n    const [numberVerified, setNumberVerified] = useState(false);\n    const currentDate = dayjs();\n\n    const defaultDate = currentDate.subtract(18, 'year');\n    const defaultDateStr = defaultDate.format('YYYY-MM-DD');\n    const [dobValue, setdobValue] = useState(dayjs(defaultDateStr));\n    // const [otp, setOtp] = React.useState('')\n    const [pincode, setPincode] = useState('');\n    const [pincodeError, setPincodeError] = useState('');\n    const [gender, setGender] = useState(''); // State variable to store the selected gender\n    const [city, setCity] = useState('');\n    const [state, setState] = useState('');\n    const [language, setLanguage] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [languagesKnownError, setLanguagesKnownError] = useState('');\n    const [genderError, setgenderError] = useState(\"\")\n    const [docmentError, setdocmentError] = useState(\"\")\n\n    const location = useLocation();\n    const data = location.state;\n    const navigate = useNavigate();\n\n\n    const {\n        email,\n        setEmail,\n        emailError,\n        setEmailError,\n        handleEmailBlur,\n        password,\n        setPassword,\n        passwordError,\n        handlePasswordBlur,\n        setPasswordError,\n        handleConfirmPasswordBlur,\n\n        confirmPassword,\n        setConfirmPassword,\n        setConfirmPasswordError,\n        setPhone,\n        phoneError,\n        phone,\n        setPhoneError,\n        handlePhoneBlur,\n        confirmPasswordError,\n        handlefirstnameBlur,\n        setfirstnameError,\n        firstnameError,\n        setFirstName,\n        firstname,\n        handleLastnameBlur,\n        lastnameError,\n        lastname,\n        setLastnameError,\n        setLastName,\n        handleAdharBlur,\n        handlePanBlur,\n\n        setAadharError,\n        setPanError,\n\n        aadharError,\n        panError,\n\n        aadharNum,\n        panNum,\n        setPanNum,\n        setAadharNum,\n        address,\n        setaddress,\n        addressError,\n        setaddressError,\n        handleaddressBlur\n\n    } = useValidation();\n\n\n\n\n    useEffect(() => {\n        if (!data) {\n            navigate(\"/signup?roles=employee\",)\n        }\n\n        if (data?.email) {\n            setEmail(data.email);\n        }\n        if (data?.phone) {\n            setPhone(data.phone);\n        }\n\n        let loaclInfo = localStorage.getItem(\"personalInfo\")\n        let infoData = JSON.parse(loaclInfo)\n        if (infoData) {\n            setEmail(infoData?.email);\n            setPhone(infoData?.phone);\n            // setPassword(infoData?.password);\n            // setConfirmPassword(infoData?.password);\n            setFirstName(infoData?.firstname);\n            setLastName(infoData?.lastname);\n            setdobValue(infoData?.dobValue);\n            setGender(infoData?.gender);\n            setaddress(infoData?.address);\n            setState(infoData?.state);\n            setCity(infoData?.city);\n            setPincode(infoData?.pincode);\n            setLanguage(infoData?.language)\n            setAadharNum(infoData?.aadharNum)\n            setSelectedFile(infoData?.selectedFile)\n            // setPreviewImage(URL.createObjectURL(infoData?.selectedFile))\n        }\n\n    }, []);\n    const handleFileChange = (event) => {\n        const file = event.target.files[0];\n        if (!file?.type.startsWith('image/')) {\n            // setErrorMessage('Please upload only image files.');\n            handleSnackbarClick(true, { type: 'error', msg: 'Please upload only image files.' })\n            event.target.value = null;\n            setPreviewImage(null)\n        } else {\n            setSelectedFile(file);\n            setPreviewImage(URL.createObjectURL(file));\n        }\n\n    };\n\n\n\n\n    const handleChange = (fieldName) => (event) => {\n        // Update the value of the specified field in the component's state\n        if (fieldName === 'phone') {\n            // setPhone('91')\n            const value = event.target.value;\n            const sanitizedInput = value.replace(/[^0-9]/g, '').slice(0, 10);\n            if (sanitizedInput.length <= 10) {\n                setPhone(sanitizedInput);\n            }\n            // setPhone(event.target.value);\n\n        }\n        if (fieldName === 'otp') {\n            setOtp(event);\n\n\n        }\n    };\n\n\n    function isEmailValid(email) {\n        // Regular expression for a basic email validation\n        const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n        return emailRegex.test(email);\n    }\n    const emailOtpSend = async () => {\n        isEmailValid(email)\n\n        if (!isEmailValid(email)) {\n            await handleEmailBlur()\n            return\n        }\n\n        setLoading(true);\n        let data = {\n            \"email\": email\n        }\n        try {\n            const response = await sendEmailOtp(data);\n            if (response?.status == 200) {\n                setLoading(false);\n                setEmailOtpSent(true)\n                // setOtpResponse(response?.data?.details)\n            } else {\n            }\n        } catch (err) {\n            setLoading(false);\n            handleSnackbarClick(true, { type: 'error', msg: err?.response?.data?.errors?.message })\n        }\n    }\n\n    const aadhaarVerify = async () => {\n        const requestBody = {\n            id_number: aadharNum,\n            // Add other data as needed\n        };\n\n        // Make the API request\n        axios.post('https://kyc-api.surepass.io/api/v1/aadhaar-validation/aadhaar-validation', requestBody, {\n            headers: {\n                'Authorization': `Bearer ${ENV_CONFIG.AUTH_TOKEN}`,\n                'Content-Type': 'application/json', // Specify the content type as JSON\n            },\n        })\n            .then(response => {\n                handleSnackbarClick(true, { type: 'success', msg: \"Verification Success\" })\n                setAadharStatus(response?.data?.success)\n            })\n            .catch(error => {\n                handleSnackbarClick(true, { type: 'error', msg: error?.response?.data?.message })\n            });\n    }\n\n\n    const panVerify = async () => {\n        const requestBody = {\n            id_number: panNum,\n            // Add other data as needed\n        };\n\n        // Make the API request\n        axios.post('https://kyc-api.surepass.io/api/v1/pan/pan', requestBody, {\n            headers: {\n                'Authorization': `Bearer ${ENV_CONFIG.AUTH_TOKEN}`,\n                'Content-Type': 'application/json', // Specify the content type as JSON\n            },\n        })\n            .then(response => {\n                handleSnackbarClick(true, { type: 'success', msg: \"Verification Success\" })\n\n                setPanStatus(response?.data?.success)\n            })\n            .catch(error => {\n                handleSnackbarClick(true, { type: 'error', msg: error?.response?.data?.message })\n            });\n    }\n\n\n\n\n\n\n\n\n    const emailOtpVerify = async () => {\n        setLoading(true);\n        let data = {\n            \"email\": email,\n            \"otp\": emailOtp,\n\n        }\n        try {\n            const response = await verifyEmailOtp(data);\n            if (response?.status == 200) {\n                setEmailVerified(true)\n\n                // }\n                setLoading(false);\n\n            } else {\n                handleSnackbarClick(true, { type: 'error', msg: 'Enter Valid OTP' })\n                setOtpSent(false)\n            }\n        } catch (err) {\n            setLoading(false);\n            handleSnackbarClick(true, { type: 'error', msg: 'Something Went Wrong' })\n        }\n    }\n\n    const otpSend = async () => {\n        setLoading(true);\n        let data = {\n            \"phone\": \"+91\" + phone\n        }\n        try {\n            const response = await sendOtp(data);\n            if (response?.status == 200) {\n                setLoading(false);\n                setOtpSent(true)\n                setOtpResponse(response?.data?.details)\n                if (response?.data?.message === \"Failed to send OTP\") {\n                    setOtpSent(false)\n                    handleSnackbarClick(true, { type: 'error', msg: \"Failed to send OTP\" })\n\n                }\n            } else {\n            }\n        } catch (err) {\n            console.log(\"errofffr\", err);\n            setLoading(false);\n            handleSnackbarClick(true, { type: 'error', msg: err?.response?.data?.errors?.message })\n        }\n    }\n    const otpVerify = async () => {\n        setLoading(true);\n        let data = {\n            \"phone\": \"+91\" + phone,\n            \"otp\": otp,\n        }\n        try {\n            const response = await verifyOtp(data);\n            if (response?.status == 200) {\n                if (response?.data?.details?.Status === \"Success\") {\n                    setNumberVerified(true)\n                } else {\n                    // alert(\"Enter Valid OTP\")\n                    handleSnackbarClick(true, { type: 'error', msg: 'Enter Valid OTP' })\n                    setOtpSent(false)\n                }\n                setLoading(false);\n\n            } else {\n\n            }\n        } catch (err) {\n            handleSnackbarClick(true, { type: 'error', msg: 'Something Went Wrong' })\n        }\n\n\n    }\n\n    // const otpFunction = (newValue) => {\n    //     setOtp(newValue)\n    // }\n\n    const handleAddressChange = (event) => {\n        const newValue = event.target.value;\n        const regex = /^[A-Za-z0-9\\s.,]*$/;\n        if (regex.test(newValue) && newValue.length <= 100) {\n            setaddress(newValue);\n            setaddressError('');\n        } else {\n            setaddressError('Invalid address. Please check the input.');\n        }\n    };\n    const handleDateChange = (date) => {\n        const inputDate = new Date(date);\n        const formattedDate = `${inputDate.getFullYear()}-${(inputDate.getMonth() + 1).toString().padStart(2, '0')}-${inputDate.getDate().toString().padStart(2, '0')}`;\n        setdobValue(formattedDate);\n\n    };\n\n    const shouldDisableDate = (date) => {\n        return date.isAfter(defaultDate, 'day');\n    };\n\n\n    const validatePincode = () => {\n        const pincodeRegex = /^\\d{6}(\\s?\\d{6})?$/;\n        const isValid = pincodeRegex.test(pincode);\n\n        if (!isValid) {\n            setPincodeError('Please enter a valid pincode');\n        } else {\n            setPincodeError('');\n        }\n        return isValid;\n    };\n\n    const handlePincodeChange = (event) => {\n        const { value } = event.target;\n        const sanitizedInput = value.replace(/[^0-9]/g, '').slice(0, 10);\n        const truncatedValue = sanitizedInput.slice(0, 6);\n        setPincode(truncatedValue);\n\n    };\n    const validateLanguagesKnown = (value) => {\n        if (/\\d/.test(value)) {\n            setLanguagesKnownError('Language known should not contain numbers.');\n        } else {\n            setLanguagesKnownError('');\n        }\n    };\n\n\n    const handleLanguageChange = (event) => {\n        const value = event.target.value;\n        const regex = /^[A-Za-z ]*$/;\n\n        if (!value) {\n            setLanguagesKnownError('Language is required.');\n            setLanguage('');\n        } else if (!regex.test(value)) {\n            setLanguagesKnownError('Language known should only contain letters, numbers, and spaces.');\n        } else {\n            setLanguagesKnownError('');\n            setLanguage(value);\n        }\n    };\n    const handlePincodeBlur = () => {\n        validatePincode();\n    };\n\n    const docValue = (e) => {\n        const docs = e.target.value\n        if (!docs) {\n            setdocmentError('docuement is required.');\n        } else {\n            setdocmentError('');\n        }\n        if (docs == \"PAN\") {\n            // aadharNum\n            setAadharNum(\"\")\n            setAadharStatus(\"\")\n        } else if (docs == \"Aadhar\") {\n            setPanNum(\"\")\n            setPanStatus(\"\")\n\n        }\n        setDocType(docs)\n    };\n\n\n\n\n    const handleNext = async (event) => {\n        if (!emailVerified) {\n            return handleSnackbarClick(true, { type: 'error', msg: \"Verify your Email Address\" })\n        }\n\n        switch (true) {\n            case !state:\n                handleSnackbarClick(true, { type: 'error', msg: 'State is missing' });\n                return;\n            case !city:\n                handleSnackbarClick(true, { type: 'error', msg: 'City is missing' });\n                return;\n            case !pincode:\n                handleSnackbarClick(true, { type: 'error', msg: 'Pincode is missing' });\n                return;\n            case !language:\n                handleSnackbarClick(true, { type: 'error', msg: 'Language is missing' });\n                return;\n            default:\n                break;\n        }\n\n\n\n        event?.preventDefault();\n\n        const validateField = (field, fieldName) => {\n            if (!field) {\n                return fieldName + ' is required';\n            }\n            return '';\n        };\n        if (password.length < 8) {\n            return handleSnackbarClick(true, { type: 'error', msg: \"Password must be at least 8 characters long\" });\n        }\n        if (!city) {\n            return handleSnackbarClick(true, { type: 'error', msg: \"City is required\" })\n        }\n\n\n        const emailError = validateField(email, 'Email');\n        const passwordError = validateField(password, 'Password');\n        const confirmPasswordError = validateField(confirmPassword, 'Confirm Password');\n        const firstnameError = validateField(firstname, 'First name');\n        const lastnameError = validateField(lastname, 'Last name');\n        const aadharError = validateField(aadharNum, 'Aadhar number');\n        const panError = validateField(panNum, 'PAN number');\n\n        const phoneError = validateField(phone, 'Phone number');\n        const addressError = validateField(address, 'Address');\n        setEmailError(emailError);\n        setPasswordError(passwordError);\n        setLastnameError(lastnameError);\n        setfirstnameError(firstnameError);\n        setAadharError(aadharError)\n        setPanError(panError)\n\n        setConfirmPasswordError(confirmPasswordError)\n\n        setPhoneError(phoneError)\n        setaddressError(addressError)\n\n        const personalInfo = {\n            email,\n            phone,\n            password,\n            //   firstName,\n            // firstname,\n            //   lastName,\n            // lastname,\n            dobValue,\n            gender,\n            address,\n            state, city, pincode, language, aadharNum, selectedFile\n        };\n\n\n        const body = {\n            \"first_name\": firstname,\n            \"last_name\": lastname,\n            \"email\": email,\n            \"phone\": phone,\n            \"password\": password,\n\n            \"grant_type\": \"password\",\n            \"client_id\": ENV_CONFIG.CLIENT_ID,\n            \"client_secret\": ENV_CONFIG.CLIENT_SECRET,\n            \"login_type\": \"password\",\n            \"username\": email,\n\n        }\n        localStorage.setItem(\"personalInfo\", JSON.stringify(personalInfo));\n        // if (aadharStatus || panStatus) {\n        console.log(\"personalInfo\", personalInfo);\n        if (numberVerified) {\n\n            if (!emailError && !passwordError && !firstnameError && !lastnameError && !phoneError) {\n\n                try {\n                    const response = await EmployeeSignup(body);\n                    let UserData = { response }\n\n                    if (response?.status == 200) {\n                        let employeeId = response?.data?.details?.id;\n                        let date = new Date();\n                        let currentTime = date.getTime();\n                        const expires_in = currentTime + response?.data?.token?.expires_in * 1000;\n                        setCurrentUser({ ...response?.data?.token, expires_in });\n\n                        // if (selectedFile ) {\n                        // if (employeeDetails?.personalInfo?.selectedFile && !isEmptyObj(employeeDetails?.personalInfo?.selectedFile)) {\n                        //     uploadProfile(employeeId)\n                        // }\n\n                        // setLoading(false);\n                        // removeItemFrmLocalStorage(['personalInfo', 'educationInfo'])\n                        setLoading(false);\n                        onNext({ personalInfo, tabKey: 1 });\n\n                    } else {\n                    }\n                } catch (err) {\n                    setLoading(false);\n                    handleSnackbarClick(true, { type: 'error', msg: err?.response?.data?.errors?.message ? err?.response?.data?.errors?.message : err?.response?.data?.errors[0]?.rules[0]?.message })\n\n                    // setErrorPopupOpen(true);\n                }\n            } else {\n                setLoading(false);\n                handleSnackbarClick(true, { type: 'error', msg: \"Verify your Mobile Number\" })\n            }\n\n        } else {\n            setLoading(false);\n            // alert(\"Verify your Mobile Number\")\n            handleSnackbarClick(true, { type: 'error', msg: \"Verify your Mobile Number\" })\n        }\n        // } else {\n        //     handleSnackbarClick(true, { type: 'error', msg: \"Please verify any document\" })\n        // }\n\n    };\n\n\n\n    // const handleGenderChange = (event) => {\n    //     const gender = event.target.value\n    //     if (!gender) {\n    //         setgenderError('gender is required.');\n    //     } else {\n    //         setgenderError('');\n    //     }\n    //     setGender(event.target.value);\n    // };\n    const handleGenderChange = (event) => {\n        const selectedGender = event.target.value;\n        if (!selectedGender) {\n            setgenderError('gender is required.');\n        } else {\n            setgenderError('');\n        }\n\n        setGender(selectedGender);\n    };\n\n    const handleChangestate = (event) => {\n\n        const selectestate = event.target.value;\n        if (!selectestate) {\n            setstateError('state is required.');\n        } else {\n            setstateError('');\n        }\n\n\n\n        setState(event.target.value);\n\n    }\n\n    const handleCity = (event) => {\n        const regex = /^[A-Za-z]+$/;\n        if (regex.test(event.target.value)) {\n            setCity(event.target.value);\n        }\n\n        if (event.target.value.trim() === '') {\n            setCityError(true);\n            setCity(event.target.value);\n            setErrorMessage('City is required');\n        } else {\n            setCityError(false);\n            setErrorMessage('');\n        }\n    }\n\n    const emailOtpValue = (e) => {\n        setEmailOtp(e)\n    }\n\n    // const handleEmailChange = (event) => {\n    //     const newEmail = event.target.value;\n    //     setEmail(newEmail);\n    //     // setIsValidEmail(validateEmail(newEmail));\n    // };\n    // const validateEmail = (email) => {\n    //     // return validator.isEmail(email);\n    // };\n\n    // const handleNext = (event) => {\n    //     event.preventDefault();\n    //     // if (password !== confirmPassword) {\n    //     //     setPasswordError(true);\n    //     //   } else {\n    //     //     setPasswordError(false);\n    //     const personalInfo = {\n    //         email,\n    //         phone,\n    //         password,\n    //         //   firstName,\n    //         firstname,\n    //         //   lastName,\n    //         lastname,\n    //         dobValue,\n    //         gender,\n    //         address,\n    //         state, city, pincode, language, aadharNum\n    //     };\n    //     localStorage.setItem(\"personalInfo\",JSON.stringify(personalInfo));\n    //     onNext(personalInfo)\n    // }\n\n\n\n    return (\n        <div className=\"WizardFormContainer\">\n            {loading && (\n                <div className=\"SiginLoader\">\n                    <Spin spinning={true} />\n                </div>\n            )}\n            <div className=\"title\">Personal Information</div>\n            <form>\n                <Grid container spacing={5}>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            id=\"first_name\"\n                            label=\"First name\"\n                            name='first_name'\n                            className=\"form-control\"\n                            defaultValue={firstname}\n                            value={firstname}\n                            error={!!firstnameError}\n                            type={'text'}\n                            helperText={firstnameError}\n                            onChange={(e) => setFirstName(e.target.value.replace(/[^A-Za-z]/ig, ''))}\n                            onBlur={handlefirstnameBlur}\n                            inputProps={{\n                                maxLength: 50\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            type={'text'}\n                            id=\"last_name\"\n                            label=\"Last name\"\n                            name='last_name'\n                            className=\"form-control\"\n                            error={!!lastnameError}\n                            helperText={lastnameError}\n                            defaultValue={lastname}\n                            value={lastname}\n                            onChange={(e) => setLastName(e.target.value.replace(/[^A-Za-z]/ig, ''))}\n                            onBlur={handleLastnameBlur}\n                            inputProps={{\n                                maxLength: 50\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        {/* <TextField\n                            id=\"name-input\"\n                            name='email'\n                            variant=\"outlined\"\n                            value={email}\n                            label=\"Email\"\n                            onBlur={handleEmailBlur}\n                            error={!!emailError}\n                            helperText={emailError}\n                            onChange={(e) => setEmail(e.target.value)}\n                            InputProps={{\n                                type: 'email',\n                            }}\n                        /> */}\n                        {\n                            emailVerified ? (\n                                <TextField\n                                    id=\"phone_number\"\n                                    label=\"Email\"\n                                    className=\"form-control\"\n                                    value={email}\n                                    InputProps={{\n                                        type: 'text',\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <DoneIcon className=\"phoneVerifyIcon\" />\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                    InputLabelProps={{ shrink: true }}\n                                />\n                            ) : emailOtpSent ? (\n                                <div className=\"verifyOtpInput\">\n                                    <MuiOtpInput value={emailOtp} onChange={emailOtpValue}\n                                        inputProps={{\n                                            inputMode: 'numeric',\n                                            pattern: '[0-9]*',\n                                        }} />\n                                    <Button className=\"phoneVerifyBtn\" onClick={emailOtpVerify}>\n                                        Enter OTP\n                                    </Button>\n                                </div>\n                            ) : (\n                                <TextField\n                                    id=\"name-input\"\n                                    name='email'\n                                    variant=\"outlined\"\n                                    value={email}\n                                    label=\"Email\"\n                                    onBlur={handleEmailBlur}\n                                    error={!!emailError}\n                                    helperText={emailError}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                    InputProps={{\n                                        type: 'text',\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <Button className=\"phoneVerifyBtn\" onClick={emailOtpSend}>\n                                                    Verify\n                                                </Button>\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                    inputProps={{\n                                        maxLength: 50\n                                    }}\n                                />\n                            )\n                        }\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        {\n                            numberVerified ? (\n                                <TextField\n                                    id=\"phone_number\"\n                                    label=\"Phone number\"\n                                    className=\"form-control\"\n                                    value={phone}\n                                    InputProps={{\n                                        type: 'tel',\n                                        maxLength: 10,\n                                        pattern: '[0-9]*',\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <DoneIcon className=\"phoneVerifyIcon\" />\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                    InputLabelProps={{ shrink: true }}\n                                />\n                            ) : otpSent ? (\n                                <div className=\"verifyOtpInput\">\n                                    <MuiOtpInput value={otp} onChange={handleChange(\"otp\")} />\n                                    <Button className=\"phoneVerifyBtn\" onClick={otpVerify}>\n                                        Enter OTP\n                                    </Button>\n                                </div>\n                            ) : (\n                                <TextField\n                                    id=\"phone_number\"\n                                    label=\"Phone number\"\n                                    className=\"form-control\"\n                                    value={phone}\n                                    onChange={handleChange(\"phone\")}\n                                    // placeholder='Please enter Country code'\n                                    // onChange={(event) => setPhone(event.target.value)}\n                                    // style={{display: 'none'}}\n                                    InputProps={{\n                                        type: 'tel',\n                                        maxLength: 10,\n                                        pattern: '[0-9]*',\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <Button className=\"phoneVerifyBtn\" onClick={otpSend}>\n                                                    Verify\n                                                </Button>\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                />\n                            )\n                        }\n\n\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            id=\"password\"\n                            label=\"Password\"\n                            className=\"form-control\"\n                            error={!!passwordError}\n                            helperText={passwordError}\n                            value={password}\n                            name='password'\n                            onBlur={handlePasswordBlur}\n                            onChange={(e) => {\n                                if (e.target.value.length <= 30) {\n                                    setPassword(e.target.value);\n                                }\n                                if (password?.length < 7) {\n                                    setPasswordError(\"minimum 8 character required\")\n                                } else {\n                                    setPasswordError(\"\")\n                                }\n                            }}\n                            type=\"password\"\n                            inputProps={{\n                                maxLength: 30\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            id=\"confirm_password\"\n                            label=\"Confirm password\"\n                            error={!!confirmPasswordError}\n                            helperText={confirmPasswordError}\n                            onBlur={handleConfirmPasswordBlur}\n                            onChange={(e) => {\n                                if (e.target.value.length <= 30) {\n                                    setConfirmPassword(e.target.value);\n                                }\n                            }}\n                            value={confirmPassword}\n                            className=\"form-control\"\n                            type=\"password\"\n                            inputProps={{\n                                maxLength: 30\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <LocalizationProvider dateAdapter={AdapterDayjs}>\n                            <DemoContainer components={['DatePicker']}>\n                                <DatePicker defaultValue={dobValue} name='dob' onChange={handleDateChange} label=\"Date of birth\" shouldDisableYear={shouldDisableDate} disableFuture slotProps={{\n                                    textField: {\n                                        readOnly: true,\n                                    },\n                                }} />\n                            </DemoContainer>\n                        </LocalizationProvider>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <FormControl fullWidth >\n                            <InputLabel id=\"type_of_company\">Gender</InputLabel>\n                            <Select\n                                labelId=\"type_of_company\"\n                                id=\"demo-simple-select\"\n                                className=\"form-control\"\n                                label=\"Gender\"\n                                value={gender}\n                                onChange={handleGenderChange}\n                                onBlur={handleGenderChange}\n                                required\n                                error={!!genderError}\n                                helperText={genderError}\n                            >\n                                <MenuItem value={\"Male\"}>Male</MenuItem>\n                                <MenuItem value={\"Female\"}>Female</MenuItem>\n                                <MenuItem value={\"Others\"}>Others</MenuItem>\n                            </Select>\n                            <p className='selecInput'>{genderError}</p>\n                        </FormControl>\n\n                    </Grid>\n                    <Grid item xs={12} sm={12}>\n                        <TextField\n                            id=\"confirm_password\"\n                            label=\"Address\"\n                            className=\"form-control\"\n                            error={!!addressError}\n                            helperText={addressError}\n                            value={address}\n                            onChange={handleAddressChange}\n                            InputProps={{\n                                type: 'text',\n                            }}\n                            inputProps={{\n                                maxLength: 100\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            id=\"city\"\n                            label=\"City\"\n                            className=\"form-control\"\n                            value={city}\n                            onChange={handleCity}\n                            onBlur={handleCity}\n                            InputProps={{\n                                type: 'text',\n                            }}\n                            error={cityError}\n                            helperText={errorMessage}\n\n                            inputProps={{\n                                maxLength: 40\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <FormControl fullWidth>\n                            <InputLabel id=\"type_of_company\">State</InputLabel>\n                            <Select\n                                labelId=\"State\"\n                                id=\"demo-simple-select\"\n                                className=\"form-control\"\n                                required\n                                label=\"State\"\n\n                                value={state}\n                                onBlur={handleChangestate}\n                                onChange={handleChangestate}\n                            >\n                                <MenuItem value={'Andhra Pradesh'}>Andhra Pradesh</MenuItem>\n                                <MenuItem value={\"Arunachal Pradesh\"}>Arunachal Pradesh</MenuItem>\n                                <MenuItem value={\"Assam\"}>Assam</MenuItem>\n                                <MenuItem value={'Bihar'}>Bihar</MenuItem>\n                                <MenuItem value={'Chhattisgarh'}>Chhattisgarh</MenuItem>\n                                <MenuItem value={'Goa'}>Goa</MenuItem>\n                                <MenuItem value={\"Haryana\"}>Haryana</MenuItem>\n                                <MenuItem value={\"Himachal Pradesh\"}>Himachal Pradesh</MenuItem>\n                                <MenuItem value={\"Jharkhand\"}>Jharkhand</MenuItem>\n                                <MenuItem value={\"Karnataka\"}>Karnataka</MenuItem>\n                                <MenuItem value={\"Kerala\"}>Kerala</MenuItem>\n                                <MenuItem value={\"Madhya Pradesh\"}>Madhya Pradesh</MenuItem>\n                                <MenuItem value={\"Maharashtra\"}>Maharashtra</MenuItem>\n                                <MenuItem value={\"Manipur\"}>Manipur</MenuItem>\n                                <MenuItem value={\"Meghalaya\"}>Meghalaya</MenuItem>\n                                <MenuItem value={\"Mizoram\"}>Mizoram</MenuItem>\n                                <MenuItem value={\"Nagaland\"}>Nagaland</MenuItem>\n                                <MenuItem value={\"Puducherry\"}>Puducherry</MenuItem>\n                                <MenuItem value={\"Punjab\"}>Punjab</MenuItem>\n                                <MenuItem value={\"Rajasthan\"}>Rajasthan</MenuItem>\n                                <MenuItem value={\"Odisha\"}>Odisha</MenuItem>\n                                <MenuItem value={\"Sikkim\"}>Sikkim</MenuItem>\n                                <MenuItem value={\"Tamil Nadu\"}>Tamil Nadu</MenuItem>\n                                <MenuItem value={\"Telangana\"}>Telangana</MenuItem>\n                                <MenuItem value={\"Tripura\"}>Tripura</MenuItem>\n                                <MenuItem value={\"Uttar Pradesh\"}>Uttar Pradesh</MenuItem>\n                                <MenuItem value={\"Uttarakhand\"}>Uttarakhand</MenuItem>\n                                <MenuItem value={\"West Bengal\"}>West Bengal</MenuItem>\n                                <MenuItem value={\"Andaman and Nicobar Islands\"}>Andaman and Nicobar Islands</MenuItem>\n                                <MenuItem value={\"Chandigarh\"}>Chandigarh</MenuItem>\n                                <MenuItem value={\"Dadra and Nagar Haveli and Daman and Diu\"}>Dadra and Nagar Haveli and Daman and Diu</MenuItem>\n                                <MenuItem value={\"Lakshadweep\"}>Lakshadweep</MenuItem>\n                                <MenuItem value={\"Delhi\"}>Delhi</MenuItem>\n                                <MenuItem value={\"Ladakh\"}>Ladakh</MenuItem>\n                                <MenuItem value={\"Lakshadweep\"}>Lakshadweep</MenuItem>\n                            </Select>\n                            <p className='selecInput'>{stateError}</p>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            id=\"pincode-input\"\n                            label=\"Pincode\"\n                            variant=\"outlined\"\n                            value={pincode}\n                            onChange={handlePincodeChange}\n                            onBlur={handlePincodeBlur}\n                            error={!!pincodeError}\n                            helperText={pincodeError}\n                            inputProps={{\n                                type: 'tel', // This will show a numeric keyboard on mobile devices\n                                maxLength: 6,   // Limit the input to 6 digits\n                            }}\n                        />\n                        {/* <TextField\n                            id=\"pincode-input\"\n                            label=\"Pincode\"\n                            variant=\"outlined\"\n                            value={pincode}\n                            onChange={handlePincodeChange}\n                            inputProps={{\n                                type: 'number', // This will show a numeric keyboard on mobile devices\n                                maxLength: 6,   // Limit the input to 6 digits\n                            }}\n                        /> */}\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            id=\"language_known\"\n                            label=\"Language known\"\n                            className=\"form-control\"\n                            error={!!languagesKnownError}\n                            helperText={languagesKnownError}\n                            onBlur={handleLanguageChange}\n                            value={language}\n                            onChange={handleLanguageChange}\n                            InputProps={{\n                                type: 'text',\n                            }}\n                            // value={language}\n                            // onChange={handleLanguageChange}\n                            inputProps={{\n                                maxLength: 40\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <FormControl fullWidth>\n                            <InputLabel id=\"aadhar_number\">Select Document For Verification</InputLabel>\n                            <Select\n                                labelId=\"aadhar_number\"\n                                id=\"aadhar_number\"\n                                className=\"form-control\"\n                                label=\"aadhar_number\"\n                                value={docType}\n\n                                onBlur={docValue}\n                                onChange={docValue}\n                            >\n                                <MenuItem value={\"PAN\"}>PAN</MenuItem>\n                                <MenuItem value={\"Aadhar\"}>Aadhar</MenuItem>\n                            </Select>\n                            <p className='selecInput'>{docmentError}</p>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        {docType == \"Aadhar\" ? (\n\n                            aadharStatus ? (\n\n                                <TextField\n                                    id=\"aadhar_number\"\n                                    label=\"aadhar_number\"\n                                    className=\"form-control\"\n                                    value={aadharNum}\n                                    InputProps={{\n                                        type: 'text',\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <DoneIcon className=\"phoneVerifyIcon\" />\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                    InputLabelProps={{ shrink: true }}\n                                />\n                            ) :\n                                <TextField\n                                    id=\"aadhar_number\"\n                                    label=\"Aadhar number\"\n                                    className=\"form-control\"\n                                    error={!!aadharError}\n                                    helperText={aadharError}\n                                    defaultValue={aadharNum}\n                                    value={aadharNum}\n                                    first Name is required\n                                    name='aadhar_number'\n                                    onBlur={handleAdharBlur}\n                                    onChange={(event) => {\n                                        const aadharNumber = event.target.value;\n                                        if (aadharNumber.length <= 12) {\n                                            const numericInput = aadharNumber.replace(/\\D/g, '')\n                                            setAadharNum(numericInput);\n                                        }\n                                    }}\n                                    InputProps={{\n                                        inputMode: 'numeric',\n                                        // type: 'text',\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n\n                                                {aadharNum ? (\n                                                    <Button className=\"phoneVerifyBtn\" onClick={aadhaarVerify}>\n                                                        Verify\n                                                    </Button>\n                                                ) : null}\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                />\n                        ) :\n                            docType == \"PAN\" ? (\n                                panStatus ? (\n                                    <TextField\n                                        id=\"pan_number\"\n                                        label=\"PAN No\"\n                                        className=\"form-control\"\n                                        value={panNum}\n                                        InputProps={{\n                                            type: 'text',\n                                            endAdornment: (\n                                                <InputAdornment position=\"end\">\n                                                    <DoneIcon className=\"phoneVerifyIcon\" />\n                                                </InputAdornment>\n                                            ),\n                                        }}\n                                        InputLabelProps={{ shrink: true }}\n                                    />\n                                ) :\n                                    <TextField\n                                        id=\"pan_number\"\n                                        label=\"PAN No\"\n                                        className=\"form-control\"\n                                        error={!!panError}\n                                        helperText={panError}\n                                        defaultValue={panNum}\n                                        value={panNum}\n                                        name='pan_number'\n                                        onBlur={handlePanBlur}\n                                        onChange={(event) => {\n                                            const panNumber = event.target.value;\n                                            if (panNumber.length <= 10) {\n                                                const numericInput = panNumber.replace(/\\s/g, '').toUpperCase();\n                                                setPanNum(numericInput);\n                                            }\n                                        }}\n                                        InputProps={{\n                                            inputMode: 'numeric',\n                                            // type: 'text',\n                                            endAdornment: (\n                                                <InputAdornment position=\"end\">\n                                                    {panNum ? (\n                                                        <Button className=\"phoneVerifyBtn\" onClick={panVerify}>\n                                                            Verify\n                                                        </Button>\n                                                    ) : null}\n                                                </InputAdornment>\n                                            ),\n                                        }}\n                                    />\n                            ) :\n                                <TextField\n                                    id=\"pan_number\"\n                                    label=\"\"\n                                    className=\"form-control\"\n\n                                    value={panNum}\n                                    name='pan_number'\n                                    onBlur={handlePanBlur}\n                                    onChange={(event) => {\n                                        handleSnackbarClick(true, { type: 'error', msg: \"Please select document for verification\" })\n                                    }}\n\n                                />\n                        }\n\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            id=\"outlined-uncontrolled\"\n                            label=\"Upload profile image\"\n                            className=\"form-control fileAttachmentInput\"\n                            InputLabelProps={{ shrink: true }}\n                            onChange={handleFileChange}\n\n                            type=\"file\"\n\n                            InputProps={{\n                                accept: 'image/*',\n                                endAdornment: (\n                                    <InputAdornment position=\"end\">\n                                        <AttachFileIcon />\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                        <div className=\"uploadedImage\">\n                            {previewImage && (\n                                <img src={previewImage} alt=\"Preview\" style={{ maxWidth: '100%', marginTop: '10px' }} />\n                            )}\n                        </div>\n                    </Grid>\n                    <Grid item xs={12} sm={12}>\n                        <div className=\"WizardNextStep\">\n                            <Button variant=\"contained\" className=\"WizardNextBtn\" onClick={handleNext}>\n                                <span>Submit</span>\n                                <EastIcon />\n                            </Button>\n                        </div>\n                    </Grid>\n                </Grid>\n            </form>\n        </div>\n    );\n}\n\nexport default PersonalInfo;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}