{"ast":null,"code":"var _jsxFileName = \"/home/abinesh/project/job-seeker/src/pages/employer/registrationWizard/general-info.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, TextField, Grid, InputAdornment } from '@mui/material';\nimport EastIcon from '@mui/icons-material/East';\nimport { useLocation, useNavigate } from 'react-router-dom';\n// import { useHistory } from 'react-router-dom';\nimport { MuiOtpInput } from 'mui-one-time-password-input';\nimport { sendOtpEmployer, verifyOtpEmployer, sendEmailOtp, verifyEmailOtp, EmployerSignup } from '../../../sevices/account';\nimport { ENV_CONFIG, VALIDATION_MSG, useValidation } from '../../../constant';\nimport DoneIcon from '@mui/icons-material/Done';\nimport CustomSnackBar from '../../../shared/snackBar';\nimport { isEmptyObj, setCurrentUser } from '../../../utils/genericUtilities';\nimport validator from 'validator';\nimport { Spin } from 'antd';\n// import { useValidation } from '@mui/x-date-pickers/internals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GeneralInfo = props => {\n  _s();\n  const {\n    onNext\n  } = props;\n  const [email, setEmail] = useState('');\n  const [isValidEmail, setIsValidEmail] = useState(true);\n  const [phone, setPhone] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [passwordError, setPasswordError] = useState(false);\n  const [numberVerified, setNumberVerified] = useState(false);\n  const [emailVerified, setEmailVerified] = useState(false);\n  const [otpSent, setOtpSent] = useState(false);\n  const [emailOtpSent, setEmailOtpSent] = useState(false);\n  const [otp, setOtp] = useState('');\n  const [emailOtp, setEmailOtp] = useState('');\n  const [otpResponse, setOtpResponse] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [customMsg, setCustomMsg] = useState({});\n  const location = useLocation();\n  const data = location.state;\n  const navigate = useNavigate();\n  // let history = useHistory();\n\n  const {\n    handleEmailBlur\n  } = useValidation();\n  useEffect(() => {\n    if (!data) {\n      navigate(\"/signup?roles=employer\");\n    }\n    if (data !== null && data !== void 0 && data.email) {\n      setEmail(data.email);\n    }\n    if (data !== null && data !== void 0 && data.phone) {\n      setPhone(data.phone);\n    }\n    let loaclInfo = localStorage.getItem(\"generalInfo\");\n    let infoData = JSON.parse(loaclInfo);\n    if (infoData) {\n      setEmail(infoData === null || infoData === void 0 ? void 0 : infoData.email);\n      setPhone(infoData === null || infoData === void 0 ? void 0 : infoData.phone);\n      setPassword(infoData === null || infoData === void 0 ? void 0 : infoData.password);\n      setConfirmPassword(infoData === null || infoData === void 0 ? void 0 : infoData.password);\n      setFirstName(infoData === null || infoData === void 0 ? void 0 : infoData.firstName);\n      setLastName(infoData === null || infoData === void 0 ? void 0 : infoData.lastName);\n    }\n  }, []);\n  const validateEmail = email => {\n    return validator.isEmail(email);\n  };\n  const handleEmailChange = event => {\n    const newEmail = event.target.value;\n    setEmail(newEmail);\n    setIsValidEmail(validateEmail(newEmail));\n  };\n  function isEmailValid(email) {\n    // Regular expression for a basic email validation\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    return emailRegex.test(email);\n  }\n  const emailOtpSend = async () => {\n    isEmailValid(email);\n    if (!isEmailValid(email)) {\n      await handleEmailBlur();\n      return;\n    }\n    setLoading(true);\n    let data = {\n      \"email\": email\n    };\n    try {\n      const response = await sendEmailOtp(data);\n      if ((response === null || response === void 0 ? void 0 : response.status) == 200) {\n        setLoading(false);\n        setEmailOtpSent(true);\n        // setOtpResponse(response?.data?.details)\n      } else {}\n    } catch (err) {\n      var _err$response, _err$response$data, _err$response$data$er;\n      setLoading(false);\n      handleSnackbarClick(true, {\n        type: 'error',\n        msg: err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : (_err$response$data$er = _err$response$data.errors) === null || _err$response$data$er === void 0 ? void 0 : _err$response$data$er.message\n      });\n    }\n  };\n  // const emailOtpSend = async () => {\n  //     setLoading(true);\n  //     let data = {\n  //         \"email\": email\n  //     }\n  //     try {\n  //         const response = await sendEmailOtp(data);\n  //         if (response?.status == 200) {\n  //             setLoading(false);\n  //             setEmailOtpSent(true)\n  //             // setOtpResponse(response?.data?.details)\n  //         } else {\n  //         }\n  //     } catch (err) {\n  //         setLoading(false);\n  //         handleSnackbarClick(true, { type: 'error', msg: err?.response?.data?.errors?.message })\n  //     }\n  // }\n\n  const emailOtpVerify = async () => {\n    setLoading(true);\n    let data = {\n      \"email\": email,\n      \"otp\": emailOtp\n    };\n    try {\n      const response = await verifyEmailOtp(data);\n      // console.log(\"otpResponse-->\", response);\n      if ((response === null || response === void 0 ? void 0 : response.status) == 200) {\n        setEmailVerified(true);\n\n        // }\n        setLoading(false);\n      } else {\n        handleSnackbarClick(true, {\n          type: 'error',\n          msg: 'Enter Valid OTP'\n        });\n        setOtpSent(false);\n      }\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      // console.log('error====>', err?.response?.data?.message);\n      setLoading(false);\n      handleSnackbarClick(true, {\n        type: 'error',\n        msg: err === null || err === void 0 ? void 0 : (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message\n      });\n      setEmailOtpSent(false);\n    }\n  };\n  const otpSend = async () => {\n    setLoading(true);\n    let data = {\n      \"phone\": \"+91\" + phone\n    };\n    try {\n      const response = await sendOtpEmployer(data);\n      if ((response === null || response === void 0 ? void 0 : response.status) == 200) {\n        var _response$data, _response$data2;\n        setLoading(false);\n        setOtpSent(true);\n        setOtpResponse(response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.details);\n        if ((response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.message) === \"Failed to send OTP\") {\n          setOtpSent(false);\n          handleSnackbarClick(true, {\n            type: 'error',\n            msg: \"Failed to send OTP\"\n          });\n        }\n      } else {}\n    } catch (err) {\n      var _err$response3, _err$response3$data, _err$response3$data$e;\n      setLoading(false);\n      handleSnackbarClick(true, {\n        type: 'error',\n        msg: err === null || err === void 0 ? void 0 : (_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : (_err$response3$data$e = _err$response3$data.errors) === null || _err$response3$data$e === void 0 ? void 0 : _err$response3$data$e.message\n      });\n    }\n  };\n  const otpVerify = async () => {\n    setLoading(true);\n    let data = {\n      \"phone\": \"+91\" + phone,\n      \"otp\": otp\n    };\n    try {\n      const response = await verifyOtpEmployer(data);\n      if ((response === null || response === void 0 ? void 0 : response.status) == 200) {\n        var _response$data3, _response$data3$detai;\n        if ((response === null || response === void 0 ? void 0 : (_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : (_response$data3$detai = _response$data3.details) === null || _response$data3$detai === void 0 ? void 0 : _response$data3$detai.Status) === \"Success\") {\n          setNumberVerified(true);\n        } else {\n          // alert(\"Enter Valid OTP\")\n          handleSnackbarClick(true, {\n            type: 'error',\n            msg: 'Enter Valid OTP'\n          });\n          setOtpSent(false);\n        }\n        setLoading(false);\n      } else {}\n    } catch (err) {\n      console.log('error', err)(true, {\n        type: 'error',\n        msg: 'Something Went Wrong'\n      });\n    }\n  };\n  const handleChange = fieldName => event => {\n    // Update the value of the specified field in the component's state\n    if (fieldName === 'phone') {\n      // setPhone('91')\n      const value = event.target.value;\n      const sanitizedInput = value.replace(/[^0-9]/g, '').slice(0, 10);\n      if (sanitizedInput.length <= 10) {\n        setPhone(sanitizedInput);\n      }\n      // if (value.length <= 10) {\n      //     setPhone(value);\n      // }\n      // setPhone(event.target.value);\n    }\n    if (fieldName === 'otp') {\n      const numericValue = event.replace(/\\D/g, '');\n      setOtp(numericValue);\n    }\n  };\n  const emailOtpValue = e => {\n    setEmailOtp(e);\n  };\n  const handleSnackbarClick = (status, msgInfo) => {\n    setOpenSnackbar(status);\n    !isEmptyObj(msgInfo) && setCustomMsg(msgInfo);\n  };\n  const handleNext = async event => {\n    event.preventDefault();\n    if (!firstName.trim() || !lastName.trim()) {\n      return handleSnackbarClick(true, {\n        type: 'error',\n        msg: 'First name and Last name cannot be empty'\n      });\n    }\n    if (email.trim() === \"\") {\n      return handleSnackbarClick(true, {\n        type: 'error',\n        msg: 'please enter valid email address'\n      });\n    }\n    if (!password) {\n      return handleSnackbarClick(true, {\n        type: 'error',\n        msg: 'please enter valid password'\n      });\n    }\n    if (password !== confirmPassword) {\n      setPasswordError(true);\n    } else if (numberVerified && emailVerified) {\n      setPasswordError(false);\n      const newData = {\n        email,\n        phone,\n        password,\n        firstName,\n        lastName\n      };\n      let genInfo = {\n        \"email\": email,\n        \"phone\": phone,\n        \"password\": password,\n        \"firstName\": firstName,\n        \"lastName\": lastName\n      };\n      localStorage.setItem(\"generalInfo\", JSON.stringify(genInfo));\n      // onNext(newData);\n\n      let body = {};\n      // body.company_website = companyWebsite;\n      // body.company_name = companyName;\n      // body.company_type = companyType;\n      // body.about_company = aboutCompany\n      // body.company_address = companyAddress\n      // body.state = state\n      // body.city = city\n      // body.zip_code = zipCode\n      body.email = email;\n      body.phone = phone;\n      body.password = password;\n      // body.social_media_link = convertedArray;\n      body.first_name = firstName;\n      body.last_name = lastName;\n      body.username = email;\n      // body.password = companyDetails.password\n      body.client_id = ENV_CONFIG.CLIENT_ID;\n      body.client_secret = ENV_CONFIG.CLIENT_SECRET;\n      body.grant_type = \"password\";\n      body.login_type = \"password\";\n      // body.gst = gst;\n      // body.aadhar = aadhar;\n      // body.verified_document = documentType;\n\n      try {\n        var _response$data4, _response$data4$token, _response$data5, _response$data6;\n        const response = await EmployerSignup(body);\n        let date = new Date();\n        let currentTime = date.getTime();\n        const expires_in = currentTime + (response === null || response === void 0 ? void 0 : (_response$data4 = response.data) === null || _response$data4 === void 0 ? void 0 : (_response$data4$token = _response$data4.token) === null || _response$data4$token === void 0 ? void 0 : _response$data4$token.expires_in) * 1000;\n        setCurrentUser({\n          ...(response === null || response === void 0 ? void 0 : (_response$data5 = response.data) === null || _response$data5 === void 0 ? void 0 : _response$data5.token),\n          expires_in\n        });\n        if ((response === null || response === void 0 ? void 0 : response.status) == 200 && response !== null && response !== void 0 && (_response$data6 = response.data) !== null && _response$data6 !== void 0 && _response$data6.token) {\n          var _response$data7, _response$data7$detai;\n          let employerId = response === null || response === void 0 ? void 0 : (_response$data7 = response.data) === null || _response$data7 === void 0 ? void 0 : (_response$data7$detai = _response$data7.details) === null || _response$data7$detai === void 0 ? void 0 : _response$data7$detai.id;\n          // if (selectedFile && selectedGovtDoc) {\n          // if (selectedFile && !isEmptyObj(selectedFile)) {\n          //     uploadLogo(employerId)\n          // }\n\n          // if (selectedGovtDoc && !isEmptyObj(selectedGovtDoc)) {\n          //     uploadGovtDoc(employerId)\n          // }\n\n          // removeItemFrmLocalStorage(['generalInfo', 'companyDetails'])\n          setLoading(false);\n          onNext(newData);\n        } else {}\n      } catch (err) {\n        var _err$response4, _err$response4$data, _err$response4$data$e, _err$response5, _err$response5$data, _err$response5$data$e, _err$response6, _err$response6$data;\n        handleSnackbarClick(true, {\n          type: 'error',\n          msg: err !== null && err !== void 0 && (_err$response4 = err.response) !== null && _err$response4 !== void 0 && (_err$response4$data = _err$response4.data) !== null && _err$response4$data !== void 0 && (_err$response4$data$e = _err$response4$data.errors) !== null && _err$response4$data$e !== void 0 && _err$response4$data$e.message ? err === null || err === void 0 ? void 0 : (_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : (_err$response5$data$e = _err$response5$data.errors) === null || _err$response5$data$e === void 0 ? void 0 : _err$response5$data$e.message : err === null || err === void 0 ? void 0 : (_err$response6 = err.response) === null || _err$response6 === void 0 ? void 0 : (_err$response6$data = _err$response6.data) === null || _err$response6$data === void 0 ? void 0 : _err$response6$data.errors[0].rules[0].message\n        });\n        // setErrorPopupOpen(true);\n        setLoading(false);\n      }\n    } else {\n      setLoading(false);\n      handleSnackbarClick(true, {\n        type: 'error',\n        msg: 'Verify your Mobile Number and Email'\n      });\n    }\n  };\n  const handlePasswordBlur = () => {\n    if (!password) {\n      setPasswordError(VALIDATION_MSG.passwordRequired);\n    } else if (password.length < 8) {\n      setPasswordError(VALIDATION_MSG.passwordLength);\n    } else {\n      setPasswordError('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"WizardFormContainer\",\n    children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SiginLoader\",\n      children: /*#__PURE__*/_jsxDEV(Spin, {\n        spinning: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"General Informations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 5,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"first_name\",\n            label: \"First name\",\n            className: \"form-control\",\n            value: firstName,\n            onChange: event => setFirstName(event.target.value.replace(/[^A-Za-z]/ig, '')),\n            inputProps: {\n              type: 'text',\n              maxLength: 50\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"last_name\",\n            label: \"Last name\",\n            className: \"form-control\",\n            value: lastName,\n            onChange: event => setLastName(event.target.value.replace(/[^A-Za-z]/ig, '')),\n            inputProps: {\n              type: 'text',\n              maxLength: 50\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: emailVerified ? /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"phone_number\",\n            label: \"Email\",\n            className: \"form-control\",\n            value: email,\n            InputProps: {\n              type: 'text',\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(DoneIcon, {\n                  className: \"phoneVerifyIcon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 45\n              }, this)\n            },\n            InputLabelProps: {\n              shrink: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 33\n          }, this) : emailOtpSent ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"verifyOtpInput\",\n            children: [/*#__PURE__*/_jsxDEV(MuiOtpInput, {\n              value: emailOtp,\n              onChange: emailOtpValue,\n              inputProps: {\n                inputMode: 'numeric',\n                pattern: '[0-9]*'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"phoneVerifyBtn\",\n              onClick: emailOtpVerify,\n              children: \"Enter OTP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"email_id\",\n            label: \"Email iD\",\n            className: \"form-control\",\n            value: email,\n            onChange: handleEmailChange,\n            onBlur: handleEmailBlur,\n            error: !isValidEmail,\n            helperText: !isValidEmail ? 'Invalid email format' : '',\n            InputProps: {\n              type: 'text',\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"phoneVerifyBtn\",\n                  onClick: emailOtpSend,\n                  children: \"Verify\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 45\n              }, this)\n            },\n            inputProps: {\n              type: 'text',\n              maxLength: 50\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: numberVerified ? /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"phone_number\",\n            label: \"Phone number\",\n            className: \"form-control\",\n            value: phone,\n            InputProps: {\n              type: 'number',\n              maxLength: 10,\n              pattern: '[0-9]*',\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(DoneIcon, {\n                  className: \"phoneVerifyIcon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 45\n              }, this)\n            },\n            InputLabelProps: {\n              shrink: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 33\n          }, this) : otpSent ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"verifyOtpInput\",\n            children: [/*#__PURE__*/_jsxDEV(MuiOtpInput, {\n              value: otp,\n              onChange: handleChange(\"otp\"),\n              inputProps: {\n                inputMode: 'numeric',\n                pattern: '[0-9]*'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"phoneVerifyBtn\",\n              onClick: otpVerify,\n              children: \"Enter OTP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"phone_number\",\n            label: \"Phone number\",\n            className: \"form-control\",\n            value: phone,\n            onChange: handleChange(\"phone\")\n            // placeholder='Please enter Country code'\n            // onChange={(event) => setPhone(event.target.value)}\n            // style={{display: 'none'}}\n            ,\n            inputProps: {\n              type: 'text',\n              maxLength: 10,\n              pattern: '[0-9]*'\n            },\n            InputProps: {\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"phoneVerifyBtn\",\n                  onClick: otpSend,\n                  children: \"Verify\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 525,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 45\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"password\",\n            label: \"Password\",\n            className: \"form-control\",\n            error: !!passwordError,\n            helperText: passwordError,\n            onBlur: handlePasswordBlur,\n            value: password,\n            onChange: event => setPassword(event.target.value),\n            InputProps: {\n              type: 'password'\n            },\n            inputProps: {\n              maxLength: 50\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"confirm_password\",\n            label: \"Confirm Password\",\n            className: \"form-control\",\n            value: confirmPassword,\n            onChange: event => setConfirmPassword(event.target.value),\n            InputProps: {\n              type: 'password'\n            },\n            inputProps: {\n              maxLength: 50\n            },\n            error: passwordError,\n            helperText: passwordError && 'Passwords do not match'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"WizardNextStep\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              className: \"WizardNextBtn\",\n              onClick: handleNext,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(EastIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 13\n    }, this), openSnackbar ? /*#__PURE__*/_jsxDEV(CustomSnackBar, {\n      openSnackbar: openSnackbar,\n      snackBarMessage: customMsg === null || customMsg === void 0 ? void 0 : customMsg.msg,\n      status: customMsg === null || customMsg === void 0 ? void 0 : customMsg.type,\n      handleSnackbarClick: handleSnackbarClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 29\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 346,\n    columnNumber: 9\n  }, this);\n};\n_s(GeneralInfo, \"CO8kq5qTJ8Rnet8zYXTvcXaPQQQ=\", false, function () {\n  return [useLocation, useNavigate, useValidation];\n});\n_c = GeneralInfo;\nexport default GeneralInfo;\nvar _c;\n$RefreshReg$(_c, \"GeneralInfo\");","map":{"version":3,"names":["React","useState","useEffect","Button","TextField","Grid","InputAdornment","EastIcon","useLocation","useNavigate","MuiOtpInput","sendOtpEmployer","verifyOtpEmployer","sendEmailOtp","verifyEmailOtp","EmployerSignup","ENV_CONFIG","VALIDATION_MSG","useValidation","DoneIcon","CustomSnackBar","isEmptyObj","setCurrentUser","validator","Spin","jsxDEV","_jsxDEV","GeneralInfo","props","_s","onNext","email","setEmail","isValidEmail","setIsValidEmail","phone","setPhone","password","setPassword","confirmPassword","setConfirmPassword","firstName","setFirstName","lastName","setLastName","passwordError","setPasswordError","numberVerified","setNumberVerified","emailVerified","setEmailVerified","otpSent","setOtpSent","emailOtpSent","setEmailOtpSent","otp","setOtp","emailOtp","setEmailOtp","otpResponse","setOtpResponse","loading","setLoading","openSnackbar","setOpenSnackbar","customMsg","setCustomMsg","location","data","state","navigate","handleEmailBlur","loaclInfo","localStorage","getItem","infoData","JSON","parse","validateEmail","isEmail","handleEmailChange","event","newEmail","target","value","isEmailValid","emailRegex","test","emailOtpSend","response","status","err","_err$response","_err$response$data","_err$response$data$er","handleSnackbarClick","type","msg","errors","message","emailOtpVerify","_err$response2","_err$response2$data","otpSend","_response$data","_response$data2","details","_err$response3","_err$response3$data","_err$response3$data$e","otpVerify","_response$data3","_response$data3$detai","Status","console","log","handleChange","fieldName","sanitizedInput","replace","slice","length","numericValue","emailOtpValue","e","msgInfo","handleNext","preventDefault","trim","newData","genInfo","setItem","stringify","body","first_name","last_name","username","client_id","CLIENT_ID","client_secret","CLIENT_SECRET","grant_type","login_type","_response$data4","_response$data4$token","_response$data5","_response$data6","date","Date","currentTime","getTime","expires_in","token","_response$data7","_response$data7$detai","employerId","id","_err$response4","_err$response4$data","_err$response4$data$e","_err$response5","_err$response5$data","_err$response5$data$e","_err$response6","_err$response6$data","rules","handlePasswordBlur","passwordRequired","passwordLength","className","children","spinning","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","sm","label","onChange","inputProps","maxLength","InputProps","endAdornment","position","InputLabelProps","shrink","inputMode","pattern","onClick","onBlur","error","helperText","variant","snackBarMessage","_c","$RefreshReg$"],"sources":["/home/abinesh/project/job-seeker/src/pages/employer/registrationWizard/general-info.js"],"sourcesContent":["import React, { useState, useEffect} from 'react';\nimport { Button, TextField, Grid, InputAdornment } from '@mui/material';\nimport EastIcon from '@mui/icons-material/East';\nimport { useLocation, useNavigate } from 'react-router-dom';\n// import { useHistory } from 'react-router-dom';\nimport { MuiOtpInput } from 'mui-one-time-password-input';\nimport { sendOtpEmployer, verifyOtpEmployer,sendEmailOtp, verifyEmailOtp, EmployerSignup } from '../../../sevices/account';\nimport { ENV_CONFIG, VALIDATION_MSG,useValidation } from '../../../constant';\nimport DoneIcon from '@mui/icons-material/Done';\nimport CustomSnackBar from '../../../shared/snackBar';\nimport { isEmptyObj, setCurrentUser } from '../../../utils/genericUtilities';\nimport validator from 'validator';\n\nimport { Spin } from 'antd';\n// import { useValidation } from '@mui/x-date-pickers/internals';\nconst GeneralInfo = (props) => {\n    const { onNext } = props;\n    const [email, setEmail] = useState('');\n    const [isValidEmail, setIsValidEmail] = useState(true);\n    const [phone, setPhone] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [passwordError, setPasswordError] = useState(false);\n    const [numberVerified, setNumberVerified] = useState(false);\n    const [emailVerified, setEmailVerified] = useState(false);\n    const [otpSent, setOtpSent] = useState(false);\n    const [emailOtpSent, setEmailOtpSent] = useState(false);\n    const [otp, setOtp] = useState('');\n    const [emailOtp, setEmailOtp] = useState('');\n    const [otpResponse, setOtpResponse] = useState('')\n    const [loading, setLoading] = useState(false);\n    const [openSnackbar, setOpenSnackbar] = useState(false);\n    const [customMsg, setCustomMsg] = useState({});\n    const location = useLocation();\n    const data = location.state;\n    const navigate = useNavigate();\n    // let history = useHistory();\n\n\n    const {\n        handleEmailBlur,\n    } = useValidation();\n\n    useEffect(() => {\n        if (!data) {\n            navigate(\"/signup?roles=employer\",)\n        }\n\n        if (data?.email) {\n            setEmail(data.email);\n        }\n        if (data?.phone) {\n            setPhone(data.phone);\n        }\n\n        let loaclInfo = localStorage.getItem(\"generalInfo\")\n        let infoData = JSON.parse(loaclInfo)\n        if (infoData) {\n            setEmail(infoData?.email);\n            setPhone(infoData?.phone);\n            setPassword(infoData?.password);\n            setConfirmPassword(infoData?.password);\n            setFirstName(infoData?.firstName);\n            setLastName(infoData?.lastName);\n        }\n\n    }, []);\n    const validateEmail = (email) => {\n        return validator.isEmail(email);\n    };\n\n    const handleEmailChange = (event) => {\n        const newEmail = event.target.value;\n        setEmail(newEmail);\n        setIsValidEmail(validateEmail(newEmail));\n    };\n\n\n    function isEmailValid(email) {\n        // Regular expression for a basic email validation\n        const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n        return emailRegex.test(email);\n    }\n    const emailOtpSend = async () => {\n        isEmailValid(email)\n\n        if (!isEmailValid(email)) {\n            await handleEmailBlur()\n            return\n        }\n\n        setLoading(true);\n        let data = {\n            \"email\": email\n        }\n        try {\n            const response = await sendEmailOtp(data);\n            if (response?.status == 200) {\n                setLoading(false);\n                setEmailOtpSent(true)\n                // setOtpResponse(response?.data?.details)\n            } else {\n            }\n        } catch (err) {\n            setLoading(false);\n            handleSnackbarClick(true, { type: 'error', msg: err?.response?.data?.errors?.message })\n        }\n    }\n    // const emailOtpSend = async () => {\n    //     setLoading(true);\n    //     let data = {\n    //         \"email\": email\n    //     }\n    //     try {\n    //         const response = await sendEmailOtp(data);\n    //         if (response?.status == 200) {\n    //             setLoading(false);\n    //             setEmailOtpSent(true)\n    //             // setOtpResponse(response?.data?.details)\n    //         } else {\n    //         }\n    //     } catch (err) {\n    //         setLoading(false);\n    //         handleSnackbarClick(true, { type: 'error', msg: err?.response?.data?.errors?.message })\n    //     }\n    // }\n\n    const emailOtpVerify = async () => {\n        setLoading(true);\n        let data = {\n            \"email\": email,\n            \"otp\": emailOtp,\n\n        }\n        try {\n            const response = await verifyEmailOtp(data);\n            // console.log(\"otpResponse-->\", response);\n            if (response?.status == 200) {\n                setEmailVerified(true)\n\n                // }\n                setLoading(false);\n\n            } else {\n                handleSnackbarClick(true, { type: 'error', msg: 'Enter Valid OTP' })\n                setOtpSent(false)\n            }\n        } catch (err) {\n            // console.log('error====>', err?.response?.data?.message);\n            setLoading(false);\n            handleSnackbarClick(true, { type: 'error', msg: err?.response?.data?.message })\n            setEmailOtpSent(false)\n        }\n    }\n\n    const otpSend = async () => {\n        setLoading(true);\n        let data = {\n            \"phone\": \"+91\" + phone\n        }\n        try {\n            const response = await sendOtpEmployer(data);\n            if (response?.status == 200) {\n                setLoading(false);\n                setOtpSent(true)\n                setOtpResponse(response?.data?.details)\n                if (response?.data?.message === \"Failed to send OTP\") {\n                    setOtpSent(false)\n                    handleSnackbarClick(true, { type: 'error', msg: \"Failed to send OTP\" })\n\n                }\n            } else {\n            }\n        } catch (err) {\n            setLoading(false);\n            handleSnackbarClick(true, { type: 'error', msg: err?.response?.data?.errors?.message })\n        }\n    }\n\n    const otpVerify = async () => {\n        setLoading(true);\n        let data = {\n            \"phone\": \"+91\" + phone,\n            \"otp\": otp,\n        }\n        try {\n            const response = await verifyOtpEmployer(data);\n            if (response?.status == 200) {\n                if (response?.data?.details?.Status === \"Success\") {\n                    setNumberVerified(true)\n                } else {\n                    // alert(\"Enter Valid OTP\")\n                    handleSnackbarClick(true, { type: 'error', msg: 'Enter Valid OTP' })\n                    setOtpSent(false)\n                }\n                setLoading(false);\n\n            } else {\n\n            }\n        } catch (err) {\n            console.log('error', err)\n                (true, { type: 'error', msg: 'Something Went Wrong' })\n        }\n\n\n    }\n\n    const handleChange = (fieldName) => (event) => {\n        // Update the value of the specified field in the component's state\n        if (fieldName === 'phone') {\n            // setPhone('91')\n            const value = event.target.value;\n            const sanitizedInput = value.replace(/[^0-9]/g, '').slice(0, 10);\n            if (sanitizedInput.length <= 10) {\n                setPhone(sanitizedInput);\n            }\n            // if (value.length <= 10) {\n            //     setPhone(value);\n            // }\n            // setPhone(event.target.value);\n\n        }\n        if (fieldName === 'otp') {\n            const numericValue = event.replace(/\\D/g, '');\n            setOtp(numericValue);\n\n\n        }\n    };\n    const emailOtpValue = (e) => {\n        setEmailOtp(e)\n\n    }\n\n    const handleSnackbarClick = (status, msgInfo) => {\n        setOpenSnackbar(status);\n        !isEmptyObj(msgInfo) && setCustomMsg(msgInfo);\n    };\n    const handleNext = async (event) => {\n        event.preventDefault();\n        if (!firstName.trim() || !lastName.trim()) {\n            return handleSnackbarClick(true, { type: 'error', msg: 'First name and Last name cannot be empty' })\n        }\n        if (email.trim() === \"\") {\n            return handleSnackbarClick(true, { type: 'error', msg: 'please enter valid email address' })\n        }\n        if (!password) {\n            return handleSnackbarClick(true, { type: 'error', msg: 'please enter valid password' })\n        }\n\n        if (password !== confirmPassword) {\n            setPasswordError(true);\n        } else if (numberVerified && emailVerified) {\n            setPasswordError(false);\n            const newData = {\n                email,\n                phone,\n                password,\n                firstName,\n                lastName,\n            };\n            let genInfo = {\n                \"email\": email,\n                \"phone\": phone,\n                \"password\": password,\n                \"firstName\": firstName,\n                \"lastName\": lastName,\n            }\n            localStorage.setItem(\"generalInfo\", JSON.stringify(genInfo));\n            // onNext(newData);\n\n            let body = {};\n            // body.company_website = companyWebsite;\n            // body.company_name = companyName;\n            // body.company_type = companyType;\n            // body.about_company = aboutCompany\n            // body.company_address = companyAddress\n            // body.state = state\n            // body.city = city\n            // body.zip_code = zipCode\n            body.email = email\n            body.phone = phone\n            body.password = password\n            // body.social_media_link = convertedArray;\n            body.first_name = firstName\n            body.last_name = lastName\n            body.username = email\n            // body.password = companyDetails.password\n            body.client_id = ENV_CONFIG.CLIENT_ID;\n            body.client_secret = ENV_CONFIG.CLIENT_SECRET;\n            body.grant_type = \"password\";\n            body.login_type = \"password\";\n            // body.gst = gst;\n            // body.aadhar = aadhar;\n            // body.verified_document = documentType;\n\n            try {\n                const response = await EmployerSignup(body);\n                let date = new Date();\n                let currentTime = date.getTime();\n                const expires_in = currentTime + response?.data?.token?.expires_in * 1000;\n                setCurrentUser({ ...response?.data?.token, expires_in });\n                if (response?.status == 200 && response?.data?.token) {\n                    let employerId = response?.data?.details?.id;\n                    // if (selectedFile && selectedGovtDoc) {\n                    // if (selectedFile && !isEmptyObj(selectedFile)) {\n                    //     uploadLogo(employerId)\n                    // }\n\n                    // if (selectedGovtDoc && !isEmptyObj(selectedGovtDoc)) {\n                    //     uploadGovtDoc(employerId)\n                    // }\n\n                    // removeItemFrmLocalStorage(['generalInfo', 'companyDetails'])\n                    setLoading(false);\n                    onNext(newData)\n\n                } else {\n\n                }\n            } catch (err) {\n\n                handleSnackbarClick(true, { type: 'error', msg: err?.response?.data?.errors?.message ? err?.response?.data?.errors?.message : err?.response?.data?.errors[0].rules[0].message })\n                // setErrorPopupOpen(true);\n                setLoading(false);\n            }\n        } else {\n            setLoading(false);\n            handleSnackbarClick(true, { type: 'error', msg: 'Verify your Mobile Number and Email' })\n        }\n    };\n    const handlePasswordBlur = () => {\n        if (!password) {\n            setPasswordError(VALIDATION_MSG.passwordRequired);\n        } else if (password.length < 8) {\n            setPasswordError(VALIDATION_MSG.passwordLength);\n        } else {\n            setPasswordError('');\n        }\n    };\n\n    return (\n        <div className=\"WizardFormContainer\">\n            {loading && (\n                <div className=\"SiginLoader\">\n                    <Spin spinning={true} />\n                </div>\n            )}\n            <div className=\"title\">General Informations</div>\n            <form>\n                <Grid container spacing={5}>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            id=\"first_name\"\n                            label=\"First name\"\n                            className=\"form-control\"\n                            value={firstName}\n                            onChange={(event) => setFirstName(event.target.value.replace(/[^A-Za-z]/ig, ''))}\n                            inputProps={{\n                                type: 'text',\n                                maxLength: 50\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            id=\"last_name\"\n                            label=\"Last name\"\n                            className=\"form-control\"\n                            value={lastName}\n                            onChange={(event) => setLastName(event.target.value.replace(/[^A-Za-z]/ig, ''))}\n                            inputProps={{\n                                type: 'text',\n                                maxLength: 50\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n\n                        {\n                            emailVerified ? (\n                                <TextField\n                                    id=\"phone_number\"\n                                    label=\"Email\"\n                                    className=\"form-control\"\n                                    value={email}\n                                    InputProps={{\n                                        type: 'text',\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <DoneIcon className=\"phoneVerifyIcon\" />\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                    InputLabelProps={{ shrink: true }}\n                                />\n                            ) : emailOtpSent ? (\n                                <div className=\"verifyOtpInput\">\n                                    <MuiOtpInput value={emailOtp} onChange={emailOtpValue}\n                                        inputProps={{\n                                            inputMode: 'numeric',\n                                            pattern: '[0-9]*',\n                                        }} />\n                                    <Button className=\"phoneVerifyBtn\" onClick={emailOtpVerify}>\n                                        Enter OTP\n                                    </Button>\n                                </div>\n                            ) : (\n                                <TextField\n                                    id=\"email_id\"\n                                    label=\"Email iD\"\n                                    className=\"form-control\"\n                                    value={email}\n                                    onChange={handleEmailChange}\n                                    onBlur={handleEmailBlur}\n                                    error={!isValidEmail}\n                                    helperText={!isValidEmail ? 'Invalid email format' : ''}\n                                    InputProps={{\n                                        type: 'text',\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <Button className=\"phoneVerifyBtn\" onClick={emailOtpSend}>\n                                                    Verify\n                                                </Button>\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                    inputProps={{\n                                        type: 'text',\n                                        maxLength: 50\n                                    }}\n                                />\n                            )\n                        }\n\n                        {/* <TextField\n                            id=\"email_id\"\n                            label=\"Email iD\"\n                            className=\"form-control\"\n                            value={email}\n                            onChange={handleEmailChange}\n                            error={!isValidEmail}\n                            helperText={!isValidEmail ? 'Invalid email format' : ''}\n                            InputProps={{\n                                type: 'text',\n                                endAdornment: (\n                                    <InputAdornment position=\"end\">\n                                    <Button className=\"phoneVerifyBtn\" onClick={emailOtpSend}>\n                                        Verify\n                                    </Button>\n                                </InputAdornment>\n                                ),\n                            }}\n                        /> */}\n                    </Grid>\n                    {/* <Grid item xs={12} sm={6}>\n                        <TextField\n                            id=\"phone_number\"\n                            label=\"Phone number\"\n                            className=\"form-control\"\n                            value={phone}\n                            onChange={(event) => {\n                                const phoneNumber = event.target.value;\n                                if (phoneNumber.length <= 10) {\n                                    setPhone(phoneNumber);\n                                }\n                            }}\n                            InputProps={{\n                                type: 'number',\n                            }}\n                        />\n                    </Grid> */}\n                    <Grid item xs={12} sm={6}>\n                        {\n                            numberVerified ? (\n                                <TextField\n                                    id=\"phone_number\"\n                                    label=\"Phone number\"\n                                    className=\"form-control\"\n                                    value={phone}\n                                    InputProps={{\n                                        type: 'number',\n                                        maxLength: 10,\n                                        pattern: '[0-9]*',\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <DoneIcon className=\"phoneVerifyIcon\" />\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                    InputLabelProps={{ shrink: true }}\n                                />\n                            ) : otpSent ? (\n                                <div className=\"verifyOtpInput\">\n                                    <MuiOtpInput value={otp} onChange={handleChange(\"otp\")}\n                                        inputProps={{\n                                            inputMode: 'numeric',\n                                            pattern: '[0-9]*',\n                                        }} />\n                                    <Button className=\"phoneVerifyBtn\" onClick={otpVerify}>\n                                        Enter OTP\n                                    </Button>\n                                </div>\n                            ) : (\n                                <TextField\n                                    id=\"phone_number\"\n                                    label=\"Phone number\"\n                                    className=\"form-control\"\n                                    value={phone}\n                                    onChange={handleChange(\"phone\")}\n                                    // placeholder='Please enter Country code'\n                                    // onChange={(event) => setPhone(event.target.value)}\n                                    // style={{display: 'none'}}\n                                    inputProps={{\n                                        type: 'text',\n                                        maxLength: 10,\n                                        pattern: '[0-9]*',\n                                    }}\n                                    InputProps={{\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <Button className=\"phoneVerifyBtn\" onClick={otpSend}>\n                                                    Verify\n                                                </Button>\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                />\n                            )\n                        }\n\n\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            id=\"password\"\n                            label=\"Password\"\n                            className=\"form-control\"\n                            error={!!passwordError}\n                            helperText={passwordError}\n                            onBlur={handlePasswordBlur}\n                            value={password}\n                            onChange={(event) => setPassword(event.target.value)}\n                            InputProps={{\n                                type: 'password',\n                            }}\n                            inputProps={{\n                                maxLength: 50\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n\n                        <TextField\n                            id=\"confirm_password\"\n                            label=\"Confirm Password\"\n                            className=\"form-control\"\n\n                            value={confirmPassword}\n                            onChange={(event) => setConfirmPassword(event.target.value)}\n                            InputProps={{\n                                type: 'password',\n                            }}\n                            inputProps={{\n                                maxLength: 50\n                            }}\n                            error={passwordError}\n                            helperText={passwordError && 'Passwords do not match'}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={12}>\n                        <div className=\"WizardNextStep\">\n                            <Button variant=\"contained\" className=\"WizardNextBtn\" onClick={handleNext}>\n                                <span>Next</span>\n                                <EastIcon />\n                            </Button>\n                        </div>\n                    </Grid>\n                </Grid>\n            </form>\n            {openSnackbar ? <CustomSnackBar\n                openSnackbar={openSnackbar}\n                snackBarMessage={customMsg?.msg}\n                status={customMsg?.type}\n                handleSnackbarClick={handleSnackbarClick}\n            /> : null}\n        </div>\n    );\n}\n\nexport default GeneralInfo;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}