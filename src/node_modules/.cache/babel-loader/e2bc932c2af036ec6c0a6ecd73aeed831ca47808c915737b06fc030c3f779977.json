{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { ENV_CONFIG } from '../constant';\nimport { loginWithOuth } from '../sevices/account';\nimport { getCurrentUserData } from './genericUtilities';\n// import dayjs from 'dayjs';\n\nlet authTokens = getCurrentUserData();\nconst axiosInstance = axios.create({\n  baseURL: ENV_CONFIG.API_URL\n});\n\n// app.use((req, res, next) => {\n//   res.setHeader('Access-Control-Allow-Origin', '*');\n//   res.setHeader('Access-Control-Allow-Headers', 'Authorization, Content-Type');\n//   next();\n// });\n\nconst WILD_CARD_APIS = ['/oauth/token'];\naxiosInstance.interceptors.request.use(config => {\n  // Check if the request URL is for login or register\n  if (WILD_CARD_APIS !== null && WILD_CARD_APIS !== void 0 && WILD_CARD_APIS.includes(config.url)) {\n    // Skip the interceptors for wild card requests\n    return config;\n  } else {\n    let authTokens = getCurrentUserData();\n    if (authTokens !== null && authTokens !== void 0 && authTokens.access_token) {\n      config.headers.Authorization = `Bearer ${authTokens === null || authTokens === void 0 ? void 0 : authTokens.access_token}`;\n    }\n  }\n  // Apply the interceptors for other requests\n  return config;\n}, error => {\n  console.log(error);\n  return Promise.reject(error);\n});\naxiosInstance.interceptors.response.use(response => {\n  return response;\n}, async error => {\n  var _error$response, _error$response2;\n  if ((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    console.log('Unauthorized!');\n  } else if ((error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 403) {\n    console.log('Forbidden!');\n  }\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"names":["React","useState","useEffect","axios","ENV_CONFIG","loginWithOuth","getCurrentUserData","authTokens","axiosInstance","create","baseURL","API_URL","WILD_CARD_APIS","interceptors","request","use","config","includes","url","access_token","headers","Authorization","error","console","log","Promise","reject","response","_error$response","_error$response2","status"],"sources":["/home/abinesh/project/job-seeker/src/utils/axiosConfig.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { ENV_CONFIG } from '../constant';\nimport { loginWithOuth } from '../sevices/account';\nimport { getCurrentUserData } from './genericUtilities';\n// import dayjs from 'dayjs';\n\nlet authTokens = getCurrentUserData()\n\nconst axiosInstance = axios.create({\n  baseURL: ENV_CONFIG.API_URL,\n});\n\n// app.use((req, res, next) => {\n//   res.setHeader('Access-Control-Allow-Origin', '*');\n//   res.setHeader('Access-Control-Allow-Headers', 'Authorization, Content-Type');\n//   next();\n// });\n\nconst WILD_CARD_APIS = [\n  '/oauth/token',\n]\n\naxiosInstance.interceptors.request.use(\n  (config) => {\n\n    // Check if the request URL is for login or register\n    if (WILD_CARD_APIS?.includes(config.url)) {\n      // Skip the interceptors for wild card requests\n      return config;\n    } else {\n      let authTokens = getCurrentUserData();\n      if (authTokens?.access_token) {\n        config.headers.Authorization = `Bearer ${authTokens?.access_token}`\n      }\n    }\n    // Apply the interceptors for other requests\n    return config;\n  },\n  (error) => {\n    console.log(error);\n    return Promise.reject(error);\n  }\n);\n\naxiosInstance.interceptors.response.use((response) => {\n  return response;\n},\n  async (error) => {\n    if (error?.response?.status === 401) {\n\n      console.log('Unauthorized!');\n    } else if (error?.response?.status === 403) {\n      console.log('Forbidden!');\n    }\n    return Promise.reject(error);\n  }\n);\nexport default axiosInstance"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,aAAa;AACxC,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SAASC,kBAAkB,QAAQ,oBAAoB;AACvD;;AAEA,IAAIC,UAAU,GAAGD,kBAAkB,CAAC,CAAC;AAErC,MAAME,aAAa,GAAGL,KAAK,CAACM,MAAM,CAAC;EACjCC,OAAO,EAAEN,UAAU,CAACO;AACtB,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;;AAEA,MAAMC,cAAc,GAAG,CACrB,cAAc,CACf;AAEDJ,aAAa,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACnCC,MAAM,IAAK;EAEV;EACA,IAAIJ,cAAc,aAAdA,cAAc,eAAdA,cAAc,CAAEK,QAAQ,CAACD,MAAM,CAACE,GAAG,CAAC,EAAE;IACxC;IACA,OAAOF,MAAM;EACf,CAAC,MAAM;IACL,IAAIT,UAAU,GAAGD,kBAAkB,CAAC,CAAC;IACrC,IAAIC,UAAU,aAAVA,UAAU,eAAVA,UAAU,CAAEY,YAAY,EAAE;MAC5BH,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUd,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEY,YAAY,EAAE;IACrE;EACF;EACA;EACA,OAAOH,MAAM;AACf,CAAC,EACAM,KAAK,IAAK;EACTC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClB,OAAOG,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AAC9B,CACF,CAAC;AAEDd,aAAa,CAACK,YAAY,CAACc,QAAQ,CAACZ,GAAG,CAAEY,QAAQ,IAAK;EACpD,OAAOA,QAAQ;AACjB,CAAC,EACC,MAAOL,KAAK,IAAK;EAAA,IAAAM,eAAA,EAAAC,gBAAA;EACf,IAAI,CAAAP,KAAK,aAALA,KAAK,wBAAAM,eAAA,GAALN,KAAK,CAAEK,QAAQ,cAAAC,eAAA,uBAAfA,eAAA,CAAiBE,MAAM,MAAK,GAAG,EAAE;IAEnCP,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;EAC9B,CAAC,MAAM,IAAI,CAAAF,KAAK,aAALA,KAAK,wBAAAO,gBAAA,GAALP,KAAK,CAAEK,QAAQ,cAAAE,gBAAA,uBAAfA,gBAAA,CAAiBC,MAAM,MAAK,GAAG,EAAE;IAC1CP,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;EAC3B;EACA,OAAOC,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AAC9B,CACF,CAAC;AACD,eAAed,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}