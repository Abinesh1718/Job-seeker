{"ast":null,"code":"var _jsxFileName = \"/home/abinesh/project/job-seeker/src/App.js\",\n  _s = $RefreshSig$();\n// Core\nimport React, { Suspense, useEffect, useState } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\n// Plugin\nimport { CircularProgress, Grid } from '@mui/material';\nimport OneSignal from 'react-onesignal';\n// Custom\nimport { ENV_CONFIG } from './constant';\nimport { loginWithOuth } from './sevices/account';\nimport { getCurrentUserData, isEmptyObj, isExpiredRefreshToken, setCurrentUser } from './utils/genericUtilities';\nimport RouteComponent from './routes';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n// App Global Style\nimport './App.scss';\nimport ScrollToTop from './routes/scrollToTop';\nimport { HelmetProvider } from 'react-helmet-async';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [authenticated, setAuthenticated] = useState(false);\n  const refreshAccessToken = async () => {\n    // Make a request to refresh token endpoint\n    const userData = getCurrentUserData();\n    let requestParams = {};\n    requestParams.refresh_token = userData === null || userData === void 0 ? void 0 : userData.refresh_token;\n    requestParams.client_id = ENV_CONFIG.CLIENT_ID;\n    requestParams.client_secret = ENV_CONFIG.CLIENT_SECRET;\n    requestParams.grant_type = \"refresh_token\";\n    try {\n      const response = await loginWithOuth(requestParams);\n      if ((response === null || response === void 0 ? void 0 : response.status) == 200) {\n        var _response$data;\n        let date = new Date();\n        let currentTime = date.getTime();\n        const expires_in = currentTime + (response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.expires_in) * 1000;\n        setCurrentUser({\n          ...(response === null || response === void 0 ? void 0 : response.data),\n          expires_in\n        });\n      }\n    } catch (err) {\n      console.log('error', err);\n    }\n  };\n  useEffect(() => {\n    const tokenExpiration = isExpiredRefreshToken();\n    const targetTimestamp = tokenExpiration === null || tokenExpiration === void 0 ? void 0 : tokenExpiration.expiresIn;\n    const currentTime = Date.now();\n    // const timeDifference = targetTimestamp - currentTime - 300000;\n    const timeDifference = targetTimestamp - 300000; //checking for fixing refresh\n\n    // const refreshTimer = setTimeout(() => {\n    //   alert(\"refresh called\")\n\n    //   tokenExpiration?.status && refreshAccessToken();\n    // }, timeDifference ); // Refresh 5 minutes before expiration\n\n    if (currentTime > targetTimestamp) {\n      (tokenExpiration === null || tokenExpiration === void 0 ? void 0 : tokenExpiration.status) && refreshAccessToken();\n    } else {\n      const refreshTimer = setTimeout(() => {\n        // alert(\"refresh called\")\n\n        (tokenExpiration === null || tokenExpiration === void 0 ? void 0 : tokenExpiration.status) && refreshAccessToken();\n      }, timeDifference); // Refresh 5 minutes before expiration\n\n      // TimeInMilliSeconds = exp - currentTime\n      // return () => {\n      //   clearTimeout(refreshTimer);\n      // }\n    }\n\n    // Checking User Authenticated\n    const findUser = getCurrentUserData();\n    if (!isEmptyObj(findUser) && findUser !== null && findUser !== void 0 && findUser.access_token) {\n      setAuthenticated(true);\n    }\n    // return () => {\n    //   clearTimeout(refreshTimer);\n    // }\n  }, []);\n  const helmetContext = {};\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(HelmetProvider, {\n      context: helmetContext,\n      children: /*#__PURE__*/_jsxDEV(ScrollToTop, {\n        children: /*#__PURE__*/_jsxDEV(Suspense, {\n          fallback: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 12,\n            height: \"90vh\",\n            display: 'flex',\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(RouteComponent, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+nyo0O1WmcKNkwQZH3xRKUoDvQ8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Suspense","useEffect","useState","BrowserRouter","CircularProgress","Grid","OneSignal","ENV_CONFIG","loginWithOuth","getCurrentUserData","isEmptyObj","isExpiredRefreshToken","setCurrentUser","RouteComponent","ScrollToTop","HelmetProvider","jsxDEV","_jsxDEV","App","_s","authenticated","setAuthenticated","refreshAccessToken","userData","requestParams","refresh_token","client_id","CLIENT_ID","client_secret","CLIENT_SECRET","grant_type","response","status","_response$data","date","Date","currentTime","getTime","expires_in","data","err","console","log","tokenExpiration","targetTimestamp","expiresIn","now","timeDifference","refreshTimer","setTimeout","findUser","access_token","helmetContext","children","context","fallback","item","md","height","display","justifyContent","alignItems","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/abinesh/project/job-seeker/src/App.js"],"sourcesContent":["// Core\nimport React, { Suspense, useEffect, useState } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\n// Plugin\nimport { CircularProgress, Grid } from '@mui/material';\nimport OneSignal from 'react-onesignal';\n// Custom\nimport { ENV_CONFIG } from './constant';\nimport { loginWithOuth } from './sevices/account';\nimport { getCurrentUserData, isEmptyObj, isExpiredRefreshToken, setCurrentUser } from './utils/genericUtilities';\nimport RouteComponent from './routes';\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n// App Global Style\nimport './App.scss';\nimport ScrollToTop from './routes/scrollToTop';\nimport { HelmetProvider } from 'react-helmet-async';\nfunction App() {\n  const [authenticated, setAuthenticated] = useState(false);\n\n\n\n  const refreshAccessToken = async () => {\n    // Make a request to refresh token endpoint\n    const userData = getCurrentUserData();\n    let requestParams = {};\n    requestParams.refresh_token = userData?.refresh_token;\n    requestParams.client_id = ENV_CONFIG.CLIENT_ID;\n    requestParams.client_secret = ENV_CONFIG.CLIENT_SECRET;\n    requestParams.grant_type = \"refresh_token\";\n    try {\n      const response = await loginWithOuth(requestParams);\n      if (response?.status == 200) {\n\n        let date = new Date();\n        let currentTime = date.getTime();\n        const expires_in = currentTime + response?.data?.expires_in * 1000;\n        setCurrentUser({ ...response?.data, expires_in });\n      }\n    } catch (err) {\n      console.log('error', err)\n    }\n  };\n\n  useEffect(() => {\n    const tokenExpiration = isExpiredRefreshToken();\n    const targetTimestamp = tokenExpiration?.expiresIn;\n    const currentTime = Date.now();\n    // const timeDifference = targetTimestamp - currentTime - 300000;\n    const timeDifference = targetTimestamp - 300000; //checking for fixing refresh\n\n    // const refreshTimer = setTimeout(() => {\n    //   alert(\"refresh called\")\n\n    //   tokenExpiration?.status && refreshAccessToken();\n    // }, timeDifference ); // Refresh 5 minutes before expiration\n\n    if (currentTime > targetTimestamp) {\n      tokenExpiration?.status && refreshAccessToken();\n    }\n    else {\n\n      const refreshTimer = setTimeout(() => {\n        // alert(\"refresh called\")\n\n        tokenExpiration?.status && refreshAccessToken();\n      }, timeDifference); // Refresh 5 minutes before expiration\n\n      // TimeInMilliSeconds = exp - currentTime\n      // return () => {\n      //   clearTimeout(refreshTimer);\n      // }\n    }\n\n    // Checking User Authenticated\n    const findUser = getCurrentUserData();\n    if (!isEmptyObj(findUser) && findUser?.access_token) {\n      setAuthenticated(true);\n    }\n    // return () => {\n    //   clearTimeout(refreshTimer);\n    // }\n  }, []);\n  const helmetContext = {};\n  return (\n    <BrowserRouter>\n      <HelmetProvider context={helmetContext}>\n        <ScrollToTop>\n          <Suspense\n            fallback={\n              <Grid item md={12} height={\"90vh\"} display={'flex'} justifyContent=\"center\" alignItems={\"center\"}>\n                <CircularProgress />\n              </Grid>\n            }\n          >\n            {/* <RouteComponent authenticated={authenticated} /> */}\n            <RouteComponent />\n          </Suspense>\n        </ScrollToTop>\n      </HelmetProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC5D,SAASC,aAAa,QAAQ,kBAAkB;;AAEhD;AACA,SAASC,gBAAgB,EAAEC,IAAI,QAAQ,eAAe;AACtD,OAAOC,SAAS,MAAM,iBAAiB;AACvC;AACA,SAASC,UAAU,QAAQ,YAAY;AACvC,SAASC,aAAa,QAAQ,mBAAmB;AACjD,SAASC,kBAAkB,EAAEC,UAAU,EAAEC,qBAAqB,EAAEC,cAAc,QAAQ,0BAA0B;AAChH,OAAOC,cAAc,MAAM,UAAU;AAErC,OAAO,mDAAmD;AAC1D;AACA,OAAO,YAAY;AACnB,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,SAASC,cAAc,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACpD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAIzD,MAAMoB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC;IACA,MAAMC,QAAQ,GAAGd,kBAAkB,CAAC,CAAC;IACrC,IAAIe,aAAa,GAAG,CAAC,CAAC;IACtBA,aAAa,CAACC,aAAa,GAAGF,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEE,aAAa;IACrDD,aAAa,CAACE,SAAS,GAAGnB,UAAU,CAACoB,SAAS;IAC9CH,aAAa,CAACI,aAAa,GAAGrB,UAAU,CAACsB,aAAa;IACtDL,aAAa,CAACM,UAAU,GAAG,eAAe;IAC1C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMvB,aAAa,CAACgB,aAAa,CAAC;MACnD,IAAI,CAAAO,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEC,MAAM,KAAI,GAAG,EAAE;QAAA,IAAAC,cAAA;QAE3B,IAAIC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;QACrB,IAAIC,WAAW,GAAGF,IAAI,CAACG,OAAO,CAAC,CAAC;QAChC,MAAMC,UAAU,GAAGF,WAAW,GAAG,CAAAL,QAAQ,aAARA,QAAQ,wBAAAE,cAAA,GAARF,QAAQ,CAAEQ,IAAI,cAAAN,cAAA,uBAAdA,cAAA,CAAgBK,UAAU,IAAG,IAAI;QAClE1B,cAAc,CAAC;UAAE,IAAGmB,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEQ,IAAI;UAAED;QAAW,CAAC,CAAC;MACnD;IACF,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,GAAG,CAAC;IAC3B;EACF,CAAC;EAEDvC,SAAS,CAAC,MAAM;IACd,MAAM0C,eAAe,GAAGhC,qBAAqB,CAAC,CAAC;IAC/C,MAAMiC,eAAe,GAAGD,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEE,SAAS;IAClD,MAAMT,WAAW,GAAGD,IAAI,CAACW,GAAG,CAAC,CAAC;IAC9B;IACA,MAAMC,cAAc,GAAGH,eAAe,GAAG,MAAM,CAAC,CAAC;;IAEjD;IACA;;IAEA;IACA;;IAEA,IAAIR,WAAW,GAAGQ,eAAe,EAAE;MACjC,CAAAD,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEX,MAAM,KAAIV,kBAAkB,CAAC,CAAC;IACjD,CAAC,MACI;MAEH,MAAM0B,YAAY,GAAGC,UAAU,CAAC,MAAM;QACpC;;QAEA,CAAAN,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEX,MAAM,KAAIV,kBAAkB,CAAC,CAAC;MACjD,CAAC,EAAEyB,cAAc,CAAC,CAAC,CAAC;;MAEpB;MACA;MACA;MACA;IACF;;IAEA;IACA,MAAMG,QAAQ,GAAGzC,kBAAkB,CAAC,CAAC;IACrC,IAAI,CAACC,UAAU,CAACwC,QAAQ,CAAC,IAAIA,QAAQ,aAARA,QAAQ,eAARA,QAAQ,CAAEC,YAAY,EAAE;MACnD9B,gBAAgB,CAAC,IAAI,CAAC;IACxB;IACA;IACA;IACA;EACF,CAAC,EAAE,EAAE,CAAC;EACN,MAAM+B,aAAa,GAAG,CAAC,CAAC;EACxB,oBACEnC,OAAA,CAACd,aAAa;IAAAkD,QAAA,eACZpC,OAAA,CAACF,cAAc;MAACuC,OAAO,EAAEF,aAAc;MAAAC,QAAA,eACrCpC,OAAA,CAACH,WAAW;QAAAuC,QAAA,eACVpC,OAAA,CAACjB,QAAQ;UACPuD,QAAQ,eACNtC,OAAA,CAACZ,IAAI;YAACmD,IAAI;YAACC,EAAE,EAAE,EAAG;YAACC,MAAM,EAAE,MAAO;YAACC,OAAO,EAAE,MAAO;YAACC,cAAc,EAAC,QAAQ;YAACC,UAAU,EAAE,QAAS;YAAAR,QAAA,eAC/FpC,OAAA,CAACb,gBAAgB;cAAA0D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB,CACP;UAAAZ,QAAA,eAGDpC,OAAA,CAACJ,cAAc;YAAAiD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEpB;AAAC9C,EAAA,CArFQD,GAAG;AAAAgD,EAAA,GAAHhD,GAAG;AAuFZ,eAAeA,GAAG;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}